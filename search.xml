<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微型计算机笔记</title>
      <link href="posts/2b0afdc8/"/>
      <url>posts/2b0afdc8/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-微型计算机概论"><a href="#第一章-微型计算机概论" class="headerlink" title="第一章 微型计算机概论"></a>第一章 微型计算机概论</h1><p>微型计算机遵循了冯·诺依曼的设计思想，计算机有五大部件组成：运算器、控制器、内存储器、输入设备、输出设备。</p><h2 id="微型计算机简介"><a href="#微型计算机简介" class="headerlink" title="微型计算机简介"></a>微型计算机简介</h2><h3 id="易混淆概念"><a href="#易混淆概念" class="headerlink" title="易混淆概念"></a>易混淆概念</h3><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201512087.png" alt=""></p><h3 id="微机分类方法"><a href="#微机分类方法" class="headerlink" title="微机分类方法"></a>微机分类方法</h3><ol><li><p>按<strong>字长</strong>分类：</p><p> 即按照微处理器单次处理的数据长度为分类标准，可分为4位，8位，16位，32位，64位微处理器</p></li><li><p>按<strong>系统规模</strong>分类：</p><p> 单片机，单板机，个人计算机。</p></li></ol><h2 id="微型计算机组成"><a href="#微型计算机组成" class="headerlink" title="微型计算机组成"></a>微型计算机组成</h2><p><strong>一、计算机的五大部分：</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201522038.png" alt=""></p><p><strong>二、微机的三总线结构</strong></p><p>总线按照功能不同一般分为三类：</p><ol><li>数据总线（DB，Data Bus）</li><li>地址总线(AB，Address Bus)</li><li>控制总线(CB，Control Bus)</li></ol><h2 id="微型计算机工作原理"><a href="#微型计算机工作原理" class="headerlink" title="微型计算机工作原理"></a>微型计算机工作原理</h2><p>微处理器对指令的执行大致可分为三个步骤：</p><p><strong>取指令</strong>：微处理器从存储器中将指令读取到微处理器内部，读取指令首先要确定指令所在的地址，这个地址由微处理器内部的指令指针寄存器存放。</p><p><strong>分析指令</strong>：也称为<strong>指令译码</strong>，微处理器通过分析读取的指令了解指令的功能和操作对象等，从而为下一步执行做好准备。</p><p><strong>执行指令</strong>：根据指令分析的结果，微处理器发出一系列控制信号，指挥各部件完成该指令的功能，这样一条指令的执行就结束了。接着微处理器读取下一条指令进入下一个指令周期。</p><h2 id="计算机运算基础⭐😱"><a href="#计算机运算基础⭐😱" class="headerlink" title="计算机运算基础⭐😱"></a>计算机运算基础⭐😱</h2><h3 id="数的位置表示法"><a href="#数的位置表示法" class="headerlink" title="数的位置表示法"></a>数的位置表示法</h3><table><thead><tr><th>数制</th><th>基数</th><th>数码</th></tr></thead><tbody><tr><td>二进制 Binary(B)</td><td>2</td><td>0,1</td></tr><tr><td>八进制 Octal (O)</td><td>8</td><td>0,1,2,3,4,5,6,7</td></tr><tr><td>十进制 Decimal (D)</td><td>10</td><td>0,1,2,3,4,5,6,7,8,9</td></tr><tr><td>十六进制 Hexadecimal(H)</td><td>16</td><td>0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F</td></tr></tbody></table><h3 id="数制之间的转换"><a href="#数制之间的转换" class="headerlink" title="数制之间的转换"></a>数制之间的转换</h3><ul><li>二进制 -&gt; 十进制</li></ul><p>按权展开求和</p><ul><li>十进制 -&gt; 二进制</li></ul><p>短除法、凑幂法</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201541389.png" alt=""></p><ul><li>二进制 -&gt; 十六进制</li></ul><p>规则：以小数点为界每四位二进制数为一组，转换成对应的十六进制符号</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201553542.png" alt=""></p><ul><li>十六进制 -&gt; 二进制</li></ul><p>规则：（同上逆反过程）</p><h3 id="计算机中多字节数据的存储"><a href="#计算机中多字节数据的存储" class="headerlink" title="计算机中多字节数据的存储"></a>计算机中多字节数据的存储</h3><p>多字节数据有两种存储方式：</p><ol><li><strong>大端存储法</strong>：高字节放低地址，反之</li><li><strong>小端存储法</strong>：高字节放高地址，反之（高高低低）</li></ol><h3 id="算术运算的基本规则"><a href="#算术运算的基本规则" class="headerlink" title="算术运算的基本规则"></a>算术运算的基本规则</h3><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201608840.png" alt=""></p><h3 id="逻辑运算的基本规则"><a href="#逻辑运算的基本规则" class="headerlink" title="逻辑运算的基本规则"></a>逻辑运算的基本规则</h3><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201616853.png" alt=""></p><h3 id="有符号数表示"><a href="#有符号数表示" class="headerlink" title="有符号数表示"></a>有符号数表示</h3><p>有符号数在计算机中表示时，除了数值外，还有相应的正负号，通常正负号以<strong>二进制数据最高位</strong>来表示。</p><p>不同计算机处理能力和表示范围有所不同，表示一个数据所使用的二进制位数也不相同，通常是字节的整数倍，如：8位、16位、32位等。</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201635799.png" alt=""></p><h4 id="常用表示法："><a href="#常用表示法：" class="headerlink" title="常用表示法："></a>常用表示法：</h4><p><strong>原码</strong>表示法：符号+绝对值</p><p>例：n=8bit</p><p>[+3]原码 = 0000,0011 = 03H</p><p>[-3]原码 = 1000,0011 = 83H</p><p>[+0]原码 = 0000,0000 = 00H</p><p>[-0]原码 = 1000,0000 = 80H</p> <div class="note warning no-icon flat"><p>注意：0的表示不唯一</p></div><p><strong>反码</strong>表示法：正数的反码同原码，负数的反码数值位与原码对应数值位取反</p><p>例：n=8bit</p><p>[+5]反码 = 0 000,0101 = 05H</p><p>[-5]反码 = 1 111,1010 = FAH</p><p>[+0]反码 = 0 000,0000 = 00H</p><p>[-0]反码 = 1 111,1111 = FFH </p> <div class="note warning no-icon flat"><p>注意：0的表示不唯一</p></div><p><strong>补码</strong>表示法：</p><ol><li><p>正数的补码：同原码</p></li><li><p>负数的补码：</p></li></ol><p>（1）写出与该负数相对应正数的补码</p><p>（2）按位求反</p><p>（3）末位加一</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201646824.png" alt=""></p><p>n位补码的表数范围： - 2^(n-1) &lt;= N &lt;= 2^(n-1)-1</p><h3 id="有符号数的加减运算"><a href="#有符号数的加减运算" class="headerlink" title="有符号数的加减运算"></a>有符号数的加减运算</h3><p>计算机中数据的加／减运算，通常以补码方式进行：</p><p><strong>加法</strong>规则：[X+Y]补码 = [X]补码+[Y]补码</p><p><strong>减法</strong>规则：[X-Y]补码 = [X]补码+[-Y]补码</p><p>补码进行减法运算可转换为对应的加法运算，计算中符号位参与运算，并能得到正确结果。</p><h1 id="第二章-微处理器系统结构"><a href="#第二章-微处理器系统结构" class="headerlink" title="第二章 微处理器系统结构"></a>第二章 微处理器系统结构</h1><h2 id="微处理器基本功能及主要性能指标"><a href="#微处理器基本功能及主要性能指标" class="headerlink" title="微处理器基本功能及主要性能指标"></a>微处理器基本功能及主要性能指标</h2><h3 id="微处理器的基本功能"><a href="#微处理器的基本功能" class="headerlink" title="微处理器的基本功能"></a>微处理器的基本功能</h3><p>微处理器是微型计算机的核心部件，也称中央处理单元，就是CPU（Central Processing Unit）。它负责微型计算机中各部件的协调，完成指令的执行和数据处理工作。</p><p>其主要功能包括：</p><p><strong>指令控制</strong>：指令执行顺序</p><p><strong>操作控制</strong>：各部件功能协调</p><p><strong>时间控制</strong>：各信号时序</p><p><strong>数据加工</strong>：算术/逻辑运算</p><h3 id="微处理器的基本结构"><a href="#微处理器的基本结构" class="headerlink" title="微处理器的基本结构"></a>微处理器的基本结构</h3><p><strong>控制器</strong> <strong>CU</strong>（Control Unit）：计算机的指挥控制中心，负责按照一定顺序自动读取程序中的指令，将指令译码后产生相应控制信号，控制各部件协同工作。</p><p><strong>运算器</strong> <strong>ALU</strong>（Arithmetic Logic Unit）：计算机的核心功能部件，主要负责算术、逻辑运算等数据加工功能。</p><p><strong>寄存器组</strong> <strong>RS</strong>（Register Set）：是CPU中暂存数据和指令的逻辑部件，用于临时存放数据或地址。</p><p>除此以外，微处理器常常还包括一定的高速缓存部件。</p><h3 id="微处理器的主要性能指标"><a href="#微处理器的主要性能指标" class="headerlink" title="微处理器的主要性能指标"></a>微处理器的主要性能指标</h3><p><strong>工作频率</strong>：包括主频、外频、倍频。主频是微处理器的工作频率，反映微处理器工作节奏的快慢；外频是指系统总线的工作频率，它反映外部设备的工作速度；倍频是指微处理器工作频率对系统总线工作频率的倍数。</p><blockquote><p>三者之间的关系可以表示为：<strong>主频=外频×倍频</strong></p></blockquote><p><strong>处理器字长</strong>：反映微处理器单次数据处理能力，字长越长表示单次处理数据能力越强。</p><p><strong>前端总线速度</strong>：前端总线指主板芯片组中的北桥芯片与CPU之间传输数据的通道，因此也称为CPU的外部总线。 它反映CPU与内存和显示部件之间交换数据的能力，前端总线速度越快，CPU与外界交换信息的能力越好，有利于提高整体处理速度。</p><p><strong>地址总线宽度</strong>：描述微处理器可以访问物理存储空间的重要指标。微处理器通过地址总线表达其访问数据所在的地址，地址总线越多则表示该微处理器可以给出的物理地址数越多，可以连接的物理内存就越大。</p><p><strong>数据总线宽度</strong>：描述微处理器与外界交换数据能力的一个重要指标。微处理器每一根数据线表示一个比特数据，数据线越多则表示每一次与外界交换的数据位数就越多，相对交换速度就越快。</p><p><strong>高速缓冲容量和级数</strong>：高速缓存（Cache）是设置在微处理器内部的一种存储器。由于其存取速度要比内存高一个数量级，可以达到与微处理器部件同频的工作速度，因此利用高速缓存可以提高处理器的工作效率。Cache根据速度和位置不同可分两级或三级。</p><p><strong>生产工艺</strong>：不同的生产工艺对CPU的功耗和工作频率有较大影响，生产工艺越先进CPU功耗越低，工作频率越高。</p><p><strong>其它性能指标</strong>：包括特殊指令扩展、超线程、流水线、乱序执行、动态执行，以及新一代CPU的双核、多核技术等体系结构方面的技术。而且体系结构对现代微处理器性能的影响已经超过制造工艺对计算机性能的影响，成为现代微处理器设计的重要技术指标。</p><h2 id="Intel-8086-微处理器⭐😱"><a href="#Intel-8086-微处理器⭐😱" class="headerlink" title="Intel 8086 微处理器⭐😱"></a>Intel 8086 微处理器⭐😱</h2><h3 id="Intel-8086-的功能结构⭐"><a href="#Intel-8086-的功能结构⭐" class="headerlink" title="Intel 8086 的功能结构⭐"></a>Intel 8086 的功能结构⭐</h3><ul><li>16位处理器、40脚的DIP(双列直插)封装。</li><li>时钟频率：5MHz、8MHz和10MHz。</li><li>20条地址线，有2^20=1024KB=1MB 寻址能力。</li></ul><h4 id="Intel-8086-的内部组成结构"><a href="#Intel-8086-的内部组成结构" class="headerlink" title="Intel 8086 的内部组成结构"></a>Intel 8086 的内部组成结构</h4><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210314201708363.png" alt=""></p><h5 id="总线接口部件BIU-Bus-Interface-Unit"><a href="#总线接口部件BIU-Bus-Interface-Unit" class="headerlink" title="总线接口部件BIU(Bus Interface Unit)"></a>总线接口部件BIU(Bus Interface Unit)</h5><p><strong>组成</strong>：</p><ol><li>段寄存器(CS、DS、ES、SS)</li><li>指令指针（IP）</li><li>地址加法器、总线控制</li><li>指令队列</li></ol><p><strong>功能</strong>：</p><ol><li>外部总线连接，完成EU所需的总线操作，计算形成20位的物理地址。 </li><li>从内存储器中取出指令送指令队列排队。</li><li>按EU的要求读写内存、I/O中的操作数。</li></ol><h5 id="执行部件EU-Execution-Unit"><a href="#执行部件EU-Execution-Unit" class="headerlink" title="执行部件EU(Execution Unit)"></a>执行部件EU(Execution Unit)</h5><p><strong>组成</strong>：</p><ol><li>通用寄存器</li><li>标志寄存器</li><li>ALU</li><li>EU控制</li></ol><p><strong>功能</strong>：</p><ol><li>从指令队列获得指令，译码、执行指令操作。</li><li>译码指令、执行算术运算、逻辑运算。</li><li>向BIU提供操作数的内存或I／O端口的地址。</li><li>管理标志寄存器和指令操作数。</li></ol><h4 id="Intel-8086-内部寄存器"><a href="#Intel-8086-内部寄存器" class="headerlink" title="Intel 8086 内部寄存器"></a>Intel 8086 内部寄存器</h4><h5 id="8个通用寄存器："><a href="#8个通用寄存器：" class="headerlink" title="8个通用寄存器："></a>8个通用寄存器：</h5><ul><li><p>8086的16位通用寄存器是：</p><p>  AX、BX、CX、DX</p><p>  SI、DI、BP、SP</p></li><li><p>其中前4个数据寄存器都还可以分成高8位和低8位两个独立的寄存器</p></li><li><p>8086的8位通用寄存器是：</p><p>  AH、BH、CH、DH</p><p>  AL、BL、CL、DL</p></li><li><p>对其中某8位的操作，并不影响另外对应8位的数据</p></li></ul><h5 id="4个段寄存器"><a href="#4个段寄存器" class="headerlink" title="4个段寄存器"></a>4个段寄存器</h5><p>DS 数据段寄存器 (Data Segment) </p><p>CS 代码段寄存器 (Code Segment) </p><p>ES 附加段寄存器 (Extra Segment) </p><p>SS 堆栈段寄存器 (Stack Segment) </p><p>这些段寄存器的内容与有效的地址一起，用于确定内存的物理地址。通常用CS、DS、ES以及SS用于确定代码段、数据段、附加段以及堆栈段的基地址。</p><h5 id="1个指令指针寄存器"><a href="#1个指令指针寄存器" class="headerlink" title="1个指令指针寄存器"></a>1个指令指针寄存器</h5><ul><li><p>指令指针寄存器<strong>IP</strong>，指示代码段中指令的偏移地址</p></li><li><p>它与代码段寄存器CS联用，确定下一条指令的物理地址</p></li><li><p>计算机通过<strong>CS : IP</strong>寄存器来<strong>控制指令序列的执行流程</strong></p></li><li><p>IP寄存器是一个专用寄存器</p></li></ul><h5 id="1个标志寄存器"><a href="#1个标志寄存器" class="headerlink" title="1个标志寄存器"></a>1个标志寄存器</h5><ul><li><p>标志（Flag）用于反映指令执行结果或控制指令执行形式</p></li><li><p>8086处理器的各种标志形成了一个16位的标志寄存器FLAGS（程序状态字PSW寄存器）</p><div class="note warning no-icon flat"><p>熟记并能背下来（老师要求）</p></div></li></ul><h6 id="标志的分类"><a href="#标志的分类" class="headerlink" title="标志的分类"></a>标志的分类</h6><ul><li><p><strong>状态标志</strong>：用来记录程序运行结果的状态信息，许多指令的执行都将相应地设置它</p><p>  CF、ZF、SF、PF、OF、AF</p></li><li><p><strong>控制标志</strong>：可由程序根据需要用指令设置，用于控制处理器执行指令的方式</p><p>  DF、IF、TF</p></li></ul><table><thead><tr><th>状态标志</th><th>含义</th><th>判断</th></tr></thead><tbody><tr><td>进位标志CF<br/>（Carry Flag）</td><td>当运算结果的最高有效位有进位（加法）或借位（减法）时，进位标志置1，即CF = 1；否则CF = 0。</td><td>49H+6DH=B6H（无进位：CF=0）<br>BBH+6AH=（1）25H（有进位：CF=1）</td></tr><tr><td>零标志ZF<br/>（Zero Flag）</td><td>若运算结果为0，则ZF = 1；否则ZF = 0；</td><td>49H+6DH=B6H（结果不是零：ZF=0）<br>75H+8BH=（1）00H（结果是零：ZF=1）</td></tr><tr><td>符号标志<br/>SF（Sign Flag）</td><td>运算结果最高位为1，则SF = 1；否则SF = 0</td><td>3AH+7CH=B6H（最高位D7=1：SF=1）<br>84H+7CH=（1）00H（最高位D7=0：SF=0）</td></tr><tr><td>奇偶标志PF<br/>（Parity Flag）</td><td>当运算结果最低字节中“1”的个数为零或偶数时，PF = 1；否则PF = 0</td><td>3AH+7CH=B6H=10110110B<br>结果中有5个1，是奇数：PF=0</td></tr><tr><td>溢出标志OF<br/>（Overflow Flag）</td><td>若算术运算的结果有溢出，则OF=1；否则 OF=0。CPU对OF的计算：最高位进位⊕次高位进位<br>程序员的判断方法：<strong>正正相加得负或负负相加得正有溢出，其余均无溢出</strong></td><td>49H+6DH=B6H（产生溢出：OF = 1）<br>75H+8BH=（1）26H（没有溢出：OF = 0）</td></tr><tr><td>辅助进位标志AF<br>（Auxiliary Carry Flag）</td><td>运算时D3位（低半字节）有进位或借位时，AF = 1；否则AF = 0。</td><td>49H+6DH=B6H，D3有进位：AF=1</td></tr><tr><td>方向标志DF<br>（Direction Flag）</td><td>用于串操作指令中，控制地址的变化方向</td><td>设置DF=0，存储器地址自动增加；<br>设置DF=1，存储器地址自动减少。</td></tr><tr><td>中断允许标志IF<br>（Interrupt-enable Flag）</td><td>用于控制外部可屏蔽中断是否可以被处理器响应</td><td>设置IF＝1，则允许中断；<br>设置IF＝0，则禁止中断。</td></tr><tr><td>陷阱标志TF<br>（Trap Flag）</td><td>用于控制处理器进入单步操作方式：</td><td>设置TF=0，处理器正常工作；<br>设置TF=1，处理器单步执行指令。</td></tr></tbody></table><blockquote><p>溢出和进位：</p><ul><li><strong>进位标志</strong>表示<strong>无符号数</strong>运算结果是否超出范围，运算结果仍然<strong>正确</strong>；</li><li><strong>溢出标志</strong>表示<strong>有符号数</strong>运算结果是否超出范围，运算结果已经<strong>不正确</strong>（毕竟正正得负怎么可能对）；</li></ul></blockquote><h3 id="Intel-8086-的存储器组织及其寻址😱"><a href="#Intel-8086-的存储器组织及其寻址😱" class="headerlink" title="Intel 8086 的存储器组织及其寻址😱"></a>Intel 8086 的存储器组织及其寻址😱</h3><h4 id="主存储器的分段机构"><a href="#主存储器的分段机构" class="headerlink" title="主存储器的分段机构"></a>主存储器的分段机构</h4><p><strong>段地址</strong>：也叫段基址，用16位二进制数表示。</p><p><strong>偏移地址</strong>：也叫有效地址，段内地址的顺序编号，用16位二进制数表示。</p><p><strong>段地址</strong>：<strong>段内偏移地址</strong> 的表示方法称<strong>逻辑地址</strong>。</p><p> 如，2000H:100H</p><p><strong>物理地址和逻辑地址的转换</strong>：</p><p>物理地址(PA) = 段地址 × 16 + 偏移地址(EA)</p><blockquote><ul><li><p>相当于是段地址右边加个0，再加上偏移地址</p></li><li><p>一个物理地址可以有多个逻辑地址</p></li></ul></blockquote><p><strong>物理地址和逻辑地址的使用场合</strong>：</p><p><strong>物理地址</strong>：CPU访问内存时使用</p><p><strong>逻辑地址</strong>：程序员描述内存单元的地址时使用</p><h3 id="Intel-8086-的引脚功能😱"><a href="#Intel-8086-的引脚功能😱" class="headerlink" title="Intel 8086 的引脚功能😱"></a>Intel 8086 的引脚功能😱</h3><p>  8086CPU的40条引脚信号可按功能分可分为四类，它们是：</p><ul><li><p>地址总线</p></li><li><p>数据总线</p></li><li><p>控制总线</p></li><li><p>其它（时钟与电源）</p></li></ul><h4 id="指令周期、总线周期和时钟周期"><a href="#指令周期、总线周期和时钟周期" class="headerlink" title="指令周期、总线周期和时钟周期"></a>指令周期、总线周期和时钟周期</h4><ul><li><p><strong>指令周期</strong>（Instruction Cycle）：执行一条指令所需要的时间称为指令周期，不同指令的指令周期不等长。</p></li><li><p><strong>总线周期</strong>（Bus Cycle）：CPU与外部交换信息总是通过总线进行的，CPU的每一个这种信息输入、输出过程需要的时间称为总线周期，每当CPU要从存储器或输入输出端口存取一个字节或字就需要一个总线周期。一个指令周期由一个或若干个总线周期组成。</p><p>  例如：</p><p>  ADD  AL, [100H]</p><p>  ADD  [100H], AL</p></li><li><p><strong>时钟周期</strong>（Clock Cycle）：时钟脉冲的重复周期称为时钟周期，由计算机的主频决定。</p></li><li><p>8086CPU的总线周期至少由4个时钟周期组成，分别以T1、T2、T3、T4表示（T代表State）。</p></li><li><p>一个总线周期完成一次数据传输，在T1期间由CPU输出地址，在T2、T3、T4期间传输数据。</p></li></ul><h4 id="最小模式和最大模式概念"><a href="#最小模式和最大模式概念" class="headerlink" title="最小模式和最大模式概念"></a>最小模式和最大模式概念</h4><p><strong>最小模式</strong>：在系统中只有一个微处理器。</p><p><strong>最大模式</strong>：两个或多个微处理器（主处理器、协处理器8087、8089）</p><h4 id="最小模式下引脚功能"><a href="#最小模式下引脚功能" class="headerlink" title="最小模式下引脚功能"></a>最小模式下引脚功能</h4><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Microcomputer_Note/image-20210315154053255.png" alt="8086CPU的引脚图" style="zoom:67%;" /><ol><li><p>AD<del>15</del>～AD<del>0</del>，地址/数据复用引脚</p><p> 数据总线：双向、三态信号</p><p> 地址总线：输出、三态信号。</p></li><li><p>A<del>19</del>/S<del>6</del> ～ A<del>16</del>/S<del>3</del> ，地址/状态总线复用，输出，三态</p><p> T1：输出20位地址信息的高4位</p><p> 其它T周期：输出状态信息。</p></li><li><p>$\overline{\text{RD}}$，读信号，输出，三态</p></li><li><p>$\overline{\text{WR}}$，写信号，输出，三态</p></li><li><p>M/$\overline{\text{IO}}$，存储器/输入输出操作选择控制信号，输出，三态</p></li></ol><ul><li><strong>高电平</strong>：CPU和存储器进行数据传输。</li><li><strong>低电平</strong>：CPU和I/O设备进行数据传输。</li></ul><ol start="6"><li>$\overline{\text{BHE}}$/S<del>7</del>，高8位数据总线允许/状态复用信号，输出，三态</li></ol><ul><li><p>T1：</p><p>  $\overline{\text{BHE}}$/S<del>7</del>=0，高8位数据有效。</p><p>  $\overline{\text{BHE}}$/S<del>7</del>=1，仅在数据总线 AD<del>7</del>～AD<del>0</del>上传送8位数据。</p></li><li><p>其它T周期：输出状态信号S<del>7</del>，在8086中没有实际定义。</p></li></ul><ol start="7"><li><p>ALE，地址锁存允许信号，输出</p><p> 实现地址信息与数据信息的分时复用。</p></li><li><p>DT/$\overline{\text{R}}$，数据发送/接收控制信号，三态，输出</p></li><li><p>$\overline{\text{DEN}}$，数据允许信号，输出，三态</p><p> 与总线收发器联络</p></li><li><p>$\overline{\text{INTR}}$，可屏蔽中断请求信号，输入</p></li><li><p>$\overline{\text{NMI}}$，非屏蔽中断请求信号，输入</p></li><li><p>$\overline{\text{INTA}}$，中断响应信号，输出，三态</p></li><li><p>READY，准备就绪，输入信号</p><p>当被访问的部件无法在<strong>8086CPU</strong>规定的时间内完成数据传送时与<strong>CPU</strong>进行联络的信号。</p></li><li><p>$\overline{\text{TEST}}$，测试输入信号</p><p>在<strong>WAIT</strong>（等待）指令期间，<strong>8086CPU</strong>每隔5个时钟周期对$\overline{\text{TEST}}$引脚进行采样：</p><p>若$\overline{\text{TEST}}$为高电平，则<strong>CPU</strong>循环于等待状态。</p><p>若$\overline{\text{TEST}}$为低电平，则<strong>CPU</strong>脱离等待状态，继续执行后续指令。</p></li><li><p>RESET，复位输入信号</p><p>复位信号高电平至少应保持<strong>4</strong>个时钟周期，随着<strong>RESET</strong>变为低电平，CPU就开始执行再启动过程。<strong>CPU</strong>复位之后，从<strong>FFFF0H</strong>单元开始读取指令字节。</p></li><li><p>HOLD，总线保持请求信号，输入</p></li><li><p>HLDA，总线保持响应信号，输出</p><p>其它设备要获得系统总线的控制权与CPU的一对联络信号。</p></li><li><p>CLK，时钟输入端</p></li></ol><p>为微处理器提供基本的定时脉冲</p><ol start="19"><li>VCC，电源输入</li></ol><p>要求接上正电压（+5V±10%）</p><ol start="20"><li>GND，地线</li></ol><h2 id="Intel-8086-微处理器基本时序"><a href="#Intel-8086-微处理器基本时序" class="headerlink" title="Intel 8086 微处理器基本时序"></a>Intel 8086 微处理器基本时序</h2>]]></content>
      
      
      <categories>
          
          <category> 📕笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💻微型计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDU OJ 编程刷题笔记</title>
      <link href="posts/3bc57976/"/>
      <url>posts/3bc57976/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>本刷题记录几乎都是基础题，无需用到算法、数据结构，适合小白食用，<del>想不到吧，我在OJ上刷了50道题后直接蓝桥杯省一，当时我也惊了，本人算法数据结构零基础，准确来说上课没听讲</del>，但言归正传，算法和数据结构真的很重要！</p></blockquote><h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><h3 id="我的常用头文件"><a href="#我的常用头文件" class="headerlink" title="我的常用头文件"></a>我的常用头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure><h3 id="头文件相关函数及用法"><a href="#头文件相关函数及用法" class="headerlink" title="头文件相关函数及用法"></a>头文件相关函数及用法</h3><h4 id="math-h（math函数）"><a href="#math-h（math函数）" class="headerlink" title="math.h（math函数）"></a>math.h（math函数）</h4><ol><li><p><strong>fabs(double x)</strong></p><p>对double型变量取绝对值</p><p><strong>abs(int x)</strong></p><p>对整型变量取绝对值</p><div class="note warning no-icon flat"><p>注意：函数使用时一定要用变量保存或直接输出，因为它不会根本上改变内存值</p></div></li><li><p><strong>floor(double x)和ceil(double x)</strong></p></li></ol><p>对double型变量向下取整和向上取整，返回类型为double类型</p><ol start="3"><li><strong>round(double x)</strong></li></ol><p>四舍五入求整</p><ol start="4"><li><strong>pow(double r,double p)</strong></li></ol><p>返回r的p次方</p><ol start="5"><li><strong>sqrt(double x)</strong></li></ol><p>返回double型变量的算术平方根</p><ol start="6"><li><strong>log(double x)</strong></li></ol><p>返回double型变量的以e为底的对数</p><ol start="7"><li><strong>sin(double x)、cos(double x)、tan(double x)</strong></li></ol><p>返回double型变量的正弦值、余弦值和正切值，参数要求是弧度制</p><ol start="8"><li><strong>asin(double x)、acos(double x)、atan(double x)</strong></li></ol><p>返回double型变量的反正弦值、反余弦值、反正切值</p><h4 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h4><p><strong>1. sort (array+xnum, array+ynum)</strong></p><p>对 [xnum, ynum) 之间的数组升序排序，数字和字母等都可以排序</p><p><strong>2. sort (array+xnum, array+ynum, compare)</strong></p><p>可以加条件判断compare函数</p><p><strong>3. reverse (array+xnum, array+ynum)</strong></p><p>对 [xnum, ynum) 之间的数组翻转顺序，同上</p> <div class="note warning no-icon flat"><p>注意：只能反转数字数组和字符串，不能反转字符数组</p></div><div class="note primary no-icon flat"><p>例子：</p><ol><li><p>reverse(str.begin(), str.end());</p></li><li><p>reverse(array, array + length);</p></li></ol></div><h4 id="string-h"><a href="#string-h" class="headerlink" title="string.h"></a>string.h</h4><p><strong>1.memset (array, 0, sizeof(array))</strong></p><p>只能将数组全初始化为0</p><p>如果array是char型，则可以初始化任意字符</p><p><strong>2.strrev (array)</strong></p><p>即可实现字符数组的反转</p><p><strong>3.memcpy (b, a, sizeof(a))</strong></p><p>将数组a赋值给b</p><h2 id="零碎知识点"><a href="#零碎知识点" class="headerlink" title="零碎知识点"></a>零碎知识点</h2><ol><li><p>不要写打印输出的提示信息</p></li><li><p>数组定义时，大小不能用变量</p></li><li><p>字符数组结束标志为’\0’</p></li><li><p>%c是单个字符，%s是字符串</p></li><li><p>判断奇偶最简方法：</p><p> if (num &amp; 1) —&gt; true为奇数，false为偶数</p></li><li><p>gets函数用于输入字符串，还可以输入空格</p></li><li><p>getchar函数用于输入字符，还可以输入空格</p></li></ol><div class="note success no-icon flat"><p>tips：getchar(); 的一个功能是可将回车字符吸收掉</p></div><p><strong>不同类型所占字节/位数：</strong></p><table><thead><tr><th>类型</th><th>字节</th><th>位数</th></tr></thead><tbody><tr><td>char</td><td>1</td><td>8</td></tr><tr><td>short</td><td>2</td><td>16</td></tr><tr><td>int, long, float</td><td>4</td><td>32</td></tr><tr><td>long long, double</td><td>8</td><td>64</td></tr></tbody></table><p><strong>如何获取数组长度：</strong></p><p><code>length = sizeof(array) / sizeof(array[0]);</code></p><p><strong>如何将char型转化为int型：</strong></p><p><code>int a_int = a_char + 0;</code></p><p><strong>输多少数据，记录多少数据（循环输入）：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[max];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) == <span class="number">1</span>) &#123; <span class="comment">// while (cin&gt;&gt;x)</span></span><br><span class="line">        a[n++] = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>算法竞赛中，常常难以确定所需数组大小，所以数组得先声明大一点（一般题目会说范围的），在空间够用前提下，再来进行后续代码。如果要数组定义的很大，那么在main函数外定义</p></blockquote><h2 id="刷题记录"><a href="#刷题记录" class="headerlink" title="刷题记录"></a>刷题记录</h2><h3 id="1000-A-B"><a href="#1000-A-B" class="headerlink" title="1000 A+B"></a>1000 A+B</h3><p><strong>Problem Description</strong><br>计算A + B。</p><p><strong>Input</strong><br>每一行包含两个整数A和B，程序可一直进行下去</p><p><strong>Output</strong><br>对于每种情况，在一行中输出 A+B</p><p><strong>Sample Input</strong><br>1 1</p><p><strong>Sample Output</strong><br>2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b)==<span class="number">2</span>) &#123; <span class="comment">//==2也可以换成 !=EOF</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a+b&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1001-总和问题"><a href="#1001-总和问题" class="headerlink" title="1001 总和问题"></a>1001 总和问题</h3><p><strong>Problem Description</strong><br>在此问题中，您的任务是计算SUM（n）= 1 + 2 + 3 + … + n。</p><p><strong>Input</strong><br>输入将由一系列整数n组成，每行一个整数。</p><p><strong>Output</strong><br>对于每种情况，在一行中输出SUM（n），然后输出空白行。您可以假设结果将在32位带符号整数的范围内。<br>(char=16bit, int/long/float=32bit, long long/double=64bit)</p><p><strong>Sample Input</strong><br>1<br>100</p><p><strong>Sample Output</strong><br>1<br>5050</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)((<span class="number">1.0</span> + a) * a / <span class="number">2</span> + <span class="number">0.5</span>) &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">             &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//计算(1+n)*n时可能会超出 int 的最大值，即造成上溢overflow</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1008-电梯"><a href="#1008-电梯" class="headerlink" title="1008 电梯"></a>1008 电梯</h3><p><strong>Problem Description</strong><br>我们城市最高的建筑物只有一部电梯。请求列表由N个正数组成。数字按指定顺序指示电梯将停在的楼层。<br>将电梯上移一层需要6秒钟，而将一层下移则需要4秒钟。电梯将在每个站点停留5秒钟。<br>对于给定的请求列表，您将计算完成列表上的请求所花费的总时间。电梯在开始时位于0楼，并且在满足请求后不必返回0楼。</p><p><strong>Input</strong><br>有多个测试用例。每个案例包含一个正整数N，后跟N个正数。输入中的所有数字均小于100。N = 0的测试用例表示输入结束。该测试用例将不被处理。</p><p><strong>Output</strong><br>将每个测试用例的总时间打印在一行上。</p><p><strong>Sample Input</strong><br>1 2<br>3 2 3 1<br>0</p><p><strong>Sample Output</strong><br>17<br>41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N) == <span class="number">1</span> &amp;&amp; N) &#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> ((a[i]-b[i]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">t += (a[i]-b[i])*<span class="number">6</span> + <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">t += (b[i]-a[i])*<span class="number">4</span> + <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">b[i + <span class="number">1</span>] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; t&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1021-斐波那契"><a href="#1021-斐波那契" class="headerlink" title="1021 斐波那契"></a>1021 斐波那契</h3><p><strong>Problem Description</strong><br>还有另一种斐波那契数：F（0）= 7，F（1）= 11，F（n）= F（n-1）+ F（n-2）（n&gt; = 2）。</p><p><strong>Input</strong><br>输入由一系列行组成，每行包含一个整数n。（n &lt;1,000,000）。</p><p><strong>Output</strong><br>如果3被F（n）均分，则打印单词”yes”。</p><p>如果没有，则打印单词“ no”。</p><p><strong>Sample Input</strong><br>0<br>1<br>2<br>3<br>4<br>5</p><p><strong>Sample Output</strong><br>no<br>no<br>yes<br>no<br>no<br>no</p><div class="note success no-icon flat"><p>技巧：本题需要自己找规律，因为到最后数字变得很大,long long数组都会溢出，所以它是找规律题 f(2)、f(6)、f(10)、f(14)、f(18)、f(22)、f(26)、f(30)……都是yes</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) == <span class="number">1</span>)  &#123;</span><br><span class="line"><span class="keyword">if</span>((n+<span class="number">2</span>) % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;yes&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2000-字母ASCII大小排序"><a href="#2000-字母ASCII大小排序" class="headerlink" title="2000 字母ASCII大小排序"></a>2000 字母ASCII大小排序</h3><p><strong>Problem Description</strong><br>输入三个字符后，按各字符的ASCII码从小到大的顺序输出这三个字符。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，有三个字符组成，之间无空格。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，字符中间用一个空格分开。</p><p><strong>Sample Input</strong><br>qwe<br>asd<br>zxc</p><p><strong>Sample Output</strong><br>e q w<br>a d s<br>c x z</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a) &#123;</span><br><span class="line">sort(a, a + <span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2001-计算两点间距"><a href="#2001-计算两点间距" class="headerlink" title="2001 计算两点间距"></a>2001 计算两点间距</h3><p><strong>Problem Description</strong><br>输入两点坐标（X1,Y1）,（X2,Y2）,计算并输出两点间的距离。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由4个实数组成，分别表示x1,y1,x2,y2,数据之间用空格隔开。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，结果保留两位小数。</p><p><strong>Sample Input</strong><br>0 0 0 1<br>0 1 1 0</p><p><strong>Sample Output</strong><br>1.00<br>1.41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x1, y1, x2, y2;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x1&gt;&gt; y1&gt;&gt; x2&gt;&gt; y2) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">sqrt</span>((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2002-计算球体积"><a href="#2002-计算球体积" class="headerlink" title="2002 计算球体积"></a>2002 计算球体积</h3><p><strong>Problem Description</strong><br>根据输入的半径值，计算球的体积。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行包括一个实数，表示球的半径。</p><p><strong>Output</strong><br>输出对应的球的体积，对于每组输入数据，输出一行，计算结果保留三位小数。</p><p><strong>Sample Input</strong><br>1<br>1.5</p><p><strong>Sample Output</strong><br>4.189<br>14.137</p><div class="note success no-icon flat"><p>提示：#define PI 3.1415927</p></div> <div class="note warning no-icon flat"><p>注意：球体积公式是4/3<em>PI</em>R^3</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415927</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; r) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, (<span class="built_in">pow</span>(r, <span class="number">3</span>)*PI*<span class="number">4</span>/<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2003-求绝对值"><a href="#2003-求绝对值" class="headerlink" title="2003 求绝对值"></a>2003 求绝对值</h3><p><strong>Problem Description</strong><br>求实数的绝对值。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行包含一个实数。</p><p><strong>Output</strong><br>对于每组输入数据，输出它的绝对值，要求每组数据输出一行，结果保留两位小数。</p><p><strong>Sample Input</strong><br>123<br>-234.00</p><p><strong>Sample Output</strong><br>123.00<br>234.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">fabs</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2004-成绩等级"><a href="#2004-成绩等级" class="headerlink" title="2004 成绩等级"></a>2004 成绩等级</h3><p><strong>Problem Description</strong><br>输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下：<br>90~100为A;</p><p>80~89为B;</p><p>70~79为C;</p><p>60~69为D;</p><p>0~59为E;</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由一个整数组成。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行。如果输入数据不在0~100范围内，请输出一行：“Score is error!”。</p><p><strong>Sample Input</strong><br>56<br>67<br>100<br>123</p><p><strong>Sample Output</strong><br>E<br>D<br>A<br>Score is error!</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; t) &#123;</span><br><span class="line"><span class="keyword">if</span> (t &gt; <span class="number">100</span> || t &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Score is error!&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">90</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;A&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">80</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;B&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">70</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;C&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">60</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;D&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;E&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2005-第几天"><a href="#2005-第几天" class="headerlink" title="2005 第几天"></a>2005 第几天</h3><p><strong>Problem Description</strong><br>给定一个日期，输出这个日期是该年的第几天。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，数据格式为YYYY/MM/DD组成，具体参见sample input ,另外，可以向你确保所有的输入数据是合法的。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，表示该日期是该年的第几天。</p><p><strong>Sample Input</strong><br>1985/1/20<br>2006/3/12</p><p><strong>Sample Output</strong><br>20<br>71</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> y, m, d;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; y&gt;&gt; c&gt;&gt; m&gt;&gt; c&gt;&gt; d) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span> &amp;&amp; (y % <span class="number">400</span> == <span class="number">0</span> || (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>))) &#123; <span class="comment">//是否是闰年</span></span><br><span class="line">ans += <span class="number">29</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line">ans += <span class="number">28</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (i==<span class="number">4</span> || i==<span class="number">6</span> || i==<span class="number">9</span> || i==<span class="number">11</span>) &#123;</span><br><span class="line">ans += <span class="number">30</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ans += <span class="number">31</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans + d&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2006-求奇数的乘积"><a href="#2006-求奇数的乘积" class="headerlink" title="2006 求奇数的乘积"></a>2006 求奇数的乘积</h3><p><strong>Problem Description</strong><br>给你n个整数，求他们中所有奇数的乘积。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例占一行，每行的第一个数为n，表示本组数据一共有n个，接着是n个整数，你可以假设每组数据必定至少存在一个奇数。</p><p><strong>Output</strong><br>输出每组数中的所有奇数的乘积，对于测试实例，输出一行。</p><p><strong>Sample Input</strong><br>3 1 2 3<br>4 2 3 4 5</p><p><strong>Sample Output</strong><br>3<br>15 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">ans *= a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2007-平方和与立方和"><a href="#2007-平方和与立方和" class="headerlink" title="2007 平方和与立方和"></a>2007 平方和与立方和</h3><p><strong>Problem Description</strong><br>给定一段连续的整数，求出他们中所有偶数的平方和以及所有奇数的立方和。</p><p><strong>Input</strong><br>输入数据包含多组测试实例，每组测试实例包含一行，由两个整数m和n组成。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，应包括两个整数x和y，分别表示该段连续的整数中所有偶数的平方和以及所有奇数的立方和。<br>你可以认为32位整数足以保存结果。</p><p><strong>Sample Input</strong><br>1 3<br>2 5</p><p><strong>Sample Output</strong><br>4 28<br>20 152</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x, y, temp;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x&gt;&gt; y) &#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> evenSum = <span class="number">0</span>, oddSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">temp = x;</span><br><span class="line">x = y;</span><br><span class="line">y = temp;</span><br><span class="line">&#125;  <span class="comment">//注意当题目过不了的时候可以考虑加上这种方法</span></span><br><span class="line"><span class="keyword">for</span> (; x &lt;= y; x++) &#123;</span><br><span class="line"><span class="keyword">if</span> (x%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">evenSum += x*x;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">oddSum += x*x*x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; evenSum &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; oddSum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2008-数值统计"><a href="#2008-数值统计" class="headerlink" title="2008 数值统计"></a>2008 数值统计</h3><p><strong>Problem Description</strong><br>统计给定的n个数中，负数、零和正数的个数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数是整数n（n&lt;100），表示需要统计的数值的个数，然后是n个实数；如果n=0，则表示输入结束，该行不做处理。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行a,b和c，分别表示给定的数据中负数、零和正数的个数。</p><p><strong>Sample Input</strong><br>6 0 1 2 3 -1 0<br>5 1 2 3 4 0.5<br>0 </p><p><strong>Sample Output</strong><br>1 2 3<br>0 0 5</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">99</span>];</span><br><span class="line"><span class="keyword">int</span> z = <span class="number">0</span>, f = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">f++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">z++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; f&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; l&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; z&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2009-求数列的和"><a href="#2009-求数列的和" class="headerlink" title="2009 求数列的和"></a>2009 求数列的和</h3><p><strong>Problem Description</strong><br>数列的定义如下：<br>数列的第一项为n，以后各项为前一项的平方根，求数列的前m项的和。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由两个整数n（n&lt;10000）和m(m&lt;1000)组成，n和m的含义如前所述。</p><p><strong>Output</strong><br>对于每组输入数据，输出该数列的和，每个测试实例占一行，要求精度保留2位小数。</p><p><strong>Sample Input</strong><br>81 4<br>2 2</p><p><strong>Sample Output</strong><br>94.73<br>3.41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">ans += n;</span><br><span class="line">n = <span class="built_in">sqrt</span>(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2010-水仙花数"><a href="#2010-水仙花数" class="headerlink" title="2010 水仙花数"></a>2010 水仙花数</h3><p><strong>Problem Description</strong><br>春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的：<br>“水仙花数”是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。<br>现在要求输出所有在m和n范围内的水仙花数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包括两个整数m和n（100&lt;=m&lt;=n&lt;=999）。</p><p><strong>Output</strong><br>对于每个测试实例，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,<br>并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开;<br>如果给定的范围内不存在水仙花数，则输出no; 每个测试实例的输出占一行。</p><p><strong>Sample Input</strong><br>100 120<br>300 380</p><p><strong>Sample Output</strong><br>no<br>370 371</p> <div class="note warning no-icon flat"><p>注意：<br>1.每行数据末尾没有空格<br>2.输出给定范围内的数据</p></div><p><strong>方法一</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> b, s, g, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = n;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">100</span> &lt;= m &amp;&amp; n &lt;= <span class="number">999</span> &amp;&amp; m &lt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (;m &lt;= n; m++) &#123;  <span class="comment">// 注意小于等于 </span></span><br><span class="line">b = m / <span class="number">100</span>;</span><br><span class="line">s = m / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">g = m % <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> ((b*b*b + s*s*s + g*g*g) == m) &#123;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; m;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法2：通过已知答案来推敲</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (; m &lt; n; m++) &#123;</span><br><span class="line"><span class="keyword">if</span> (m==<span class="number">153</span>||m==<span class="number">370</span>||m==<span class="number">371</span>||m==<span class="number">407</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; m&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2011-多项式求和"><a href="#2011-多项式求和" class="headerlink" title="2011 多项式求和"></a>2011 多项式求和</h3><p><strong>Problem Description</strong><br>多项式的描述如下：<br>1 - 1/2 + 1/3 - 1/4 + 1/5 - 1/6 + …<br>现在请你求出该多项式的前n项的和。</p><p><strong>Input</strong><br>输入数据由2行组成，首先是一个正整数m（m&lt;100），表示测试实例的个数，第二行包含m个正整数，对于每一个整数(不妨设为n,n&lt;1000），求该多项式的前n项的和。</p><p><strong>Output</strong><br>对于每个测试实例n，要求输出多项式前n项的和。每个测试实例的输出占一行，结果保留2位小数。</p><p><strong>Sample Input</strong><br>2<br>1 2</p><p><strong>Sample Output</strong><br>1.00<br>0.50</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">ans = (i % <span class="number">2</span> == <span class="number">0</span>) ? (ans - <span class="number">1.0</span>/i) : (ans + <span class="number">1.0</span>/i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2012-素数判定"><a href="#2012-素数判定" class="headerlink" title="2012 素数判定"></a>2012 素数判定</h3><p><strong>Problem Description</strong><br>对于表达式n^2+n+41，当n在（x,y）范围内取整数值时（包括x,y）(-39&lt;=x&lt;y&lt;=50)，判定该表达式的值是否都为素数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由两个整数x，y组成，当x=0,y=0时，表示输入结束，该行不做处理。</p><p><strong>Output</strong><br>对于每个给定范围内的取值，如果表达式的值都为素数，则输出”OK”,否则请输出“Sorry”,每组输出占一行。</p><p><strong>Sample Input</strong><br>0 1<br>0 0</p><p><strong>Sample Output</strong><br>OK</p><div class="note warning no-icon flat"><p>注意：素数判断只需看2 ~ √m 之间是否能被整除，能则不是素数（质数）</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x&gt;&gt; y &amp;&amp; (x || y)) &#123;</span><br><span class="line"><span class="keyword">int</span> ss;  <span class="comment">//素数 </span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;   <span class="comment">//标志素数 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= y; i++) &#123;</span><br><span class="line">ss = i*i + i + <span class="number">41</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= <span class="built_in">sqrt</span>(ss); j++) &#123;  <span class="comment">//判断素数</span></span><br><span class="line"><span class="keyword">if</span> (ss % j == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Sorry&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;OK&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2013-蟠桃记"><a href="#2013-蟠桃记" class="headerlink" title="2013 蟠桃记"></a>2013 蟠桃记</h3><p><strong>Problem Description</strong><br>喜欢西游记的同学肯定都知道悟空偷吃蟠桃的故事，其实你们是有所不知：悟空是在研究一个数学问题！他研究的问题是蟠桃一共有多少个！<br>当时的情况是这样的：<br>第一天悟空吃掉桃子总数一半多一个，第二天又将剩下的桃子吃掉一半多一个，以后每天吃掉前一天剩下的一半多一个，到第n天准备吃的时候只剩下一个桃子。聪明的你，请帮悟空算一下，他第一天开始吃的时候桃子一共有多少个呢？</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包含一个正整数n（1&lt;n&lt;30），表示只剩下一个桃子的时候是在第n天发生的。</p><p><strong>Output</strong><br>对于每组输入数据，输出第一天开始吃的时候桃子的总数，每个测试实例占一行。</p><p><strong>Sample Input</strong><br>2<br>4</p><p><strong>Sample Output</strong><br>4<br>22  </p><blockquote><p>逆向思维(倒放)：猴子每天先吐出一个桃子，然后再吐出2倍的桃子</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> pnum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">pnum = <span class="number">2</span> * (pnum + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; pnum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2014-大赛评分"><a href="#2014-大赛评分" class="headerlink" title="2014 大赛评分"></a>2014 大赛评分</h3><p><strong>Problem Description</strong><br>青年歌手大奖赛中，评委会给参赛选手打分。选手得分规则为去掉最高最低分，然后计算平均分，请编程输出某选手的得分。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数是n(2&lt;n&lt;=100)，表示评委的人数，然后是n个评委的打分。</p><p><strong>Output</strong><br>对于每组输入数据，输出选手的得分，结果保留2位小数，每组输出占一行。</p><p><strong>Sample Input</strong><br>3 99 98 97<br>4 100 99 98 97</p><p><strong>Sample Output</strong><br>98.00<br>98.50</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">double</span> grades[<span class="number">100</span>], avg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; grades[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(grades, grades+n);  <span class="comment">//排序 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">avg += grades[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, avg/(n<span class="number">-2</span>)); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2015-偶数数列平均值"><a href="#2015-偶数数列平均值" class="headerlink" title="2015 偶数数列平均值"></a>2015 偶数数列平均值</h3><p><strong>Problem Description</strong><br>有一个长度为n(n&lt;=100)的数列，该数列定义为从2开始的递增有序偶数，现在要求你按照顺序每m个数求出一个平均值，如果最后不足m个，则以实际数量求平均值。编程输出该平均值序列。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包含两个正整数n和m，n和m的含义如上所述。</p><p><strong>Output</strong><br>对于每组输入数据，输出一个平均值序列，每组输出占一行。</p><p><strong>Sample Input</strong><br>3 2<br>4 2</p><p><strong>Sample Output</strong><br>3 6<br>3 7</p><div class="note warning no-icon flat"><p>注意：用数列的中位数来算均值方便些</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, a[<span class="number">100</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i+=m) &#123;</span><br><span class="line"><span class="keyword">if</span> (n - i &lt; m) &#123;      <span class="comment">//最后数列不足m个</span></span><br><span class="line"><span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>) &#123;  <span class="comment">//m为偶数 </span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a[i+(n-i)/<span class="number">2</span>] + a[i])/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">//m为奇数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i-((n-i)<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>) &#123;  <span class="comment">//m为偶数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a[i+m/<span class="number">2</span>] + a[i])/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">//m为奇数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i+(m<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2016-数据的交换输出"><a href="#2016-数据的交换输出" class="headerlink" title="2016 数据的交换输出"></a>2016 数据的交换输出</h3><p><strong>Problem Description</strong><br>输入n(n&lt;100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的开始是一个整数n，表示这个测试实例的数值的个数，跟着就是n个整数。n=0表示输入的结束，不做处理。</p><p><strong>Output</strong><br>对于每组输入数据，输出交换后的数列，每组输出占一行。</p><p><strong>Sample Input</strong><br>4 2 1 3 4<br>5 5 4 3 2 1<br>0</p><p><strong>Sample Output</strong><br>1 2 3 4<br>1 4 3 2 5</p><div class="note warning no-icon flat"><p>注意：一定要将flag初始化，否则min一开始就是最小的话，<br>那么if就不执行，从而flag至始至终没有值， 从而导致temp那儿的转化出错</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n &amp;&amp; n &lt; <span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>, min, a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> (!i) &#123;min = a[i];&#125;</span><br><span class="line"><span class="keyword">if</span> (min &gt; a[i]) &#123;</span><br><span class="line">min = a[i];</span><br><span class="line">flag = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp = a[<span class="number">0</span>];</span><br><span class="line">a[<span class="number">0</span>] = a[flag];</span><br><span class="line">a[flag] = temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2017-字符串统计"><a href="#2017-字符串统计" class="headerlink" title="2017 字符串统计"></a>2017 字符串统计</h3><p><strong>Problem Description</strong><br>对于给定的一个字符串，统计其中数字字符出现的次数。</p><p><strong>Input</strong><br>输入数据有多行，第一行是一个整数n，表示测试实例的个数，后面跟着n行，每行包括一个由字母和数字组成的字符串。</p><p><strong>Output</strong><br>对于每个测试实例，输出该串中数值的个数，每个输出占一行。</p><p><strong>Sample Input</strong><br>2<br>asdfasdf123123asdfasdf<br>asdf111111111asdfasdfasdf</p><p><strong>Sample Output</strong><br>6<br>9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; a[i] &gt;= <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2018-母牛的数量"><a href="#2018-母牛的数量" class="headerlink" title="2018 母牛的数量"></a>2018 母牛的数量</h3><p><strong>Problem Description</strong><br>有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？</p><p><strong>Input</strong><br>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&lt;n&lt;55)，n的含义如题目中描述。<br>n=0表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出在第n年的时候母牛的数量。<br>每个输出占一行。</p><p><strong>Sample Input</strong><br>2<br>4<br>5<br>0</p><p><strong>Sample Output</strong><br>2<br>4<br>6</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="comment">// 各年龄牛数的初始化</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">0</span>; <span class="comment">//1岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">0</span>; <span class="comment">//2岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num3 = <span class="number">0</span>; <span class="comment">//3岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num4 = <span class="number">1</span>; <span class="comment">//4岁及以上的母牛数，可生牛了</span></span><br><span class="line"><span class="keyword">int</span> t1, t2, t3, t4; <span class="comment">//temp</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">t1 = num1;</span><br><span class="line">t2 = num2;</span><br><span class="line">t3 = num3;</span><br><span class="line">t4 = num4;</span><br><span class="line">num1 += t4 - t1; <span class="comment">//num1取决于num4有多少，又因为大了一岁，所以这个年龄区间牛数还要减去原来的</span></span><br><span class="line">num2 += t1 - t2; <span class="comment">//num2取决于num1有多少，同样需要减去原来牛数</span></span><br><span class="line">num3 += t2 - t3; <span class="comment">//以此类推</span></span><br><span class="line">num4 += t3; <span class="comment">//4年及以上不用减去原来的牛数了，扎堆</span></span><br><span class="line">num1 += t3;      <span class="comment">//3岁牛一到4岁就要生一岁的牛，再加t3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; num1 + num2 + num3 + num4&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2019-数列有序"><a href="#2019-数列有序" class="headerlink" title="2019 数列有序"></a>2019 数列有序</h3><p><strong>Problem Description</strong><br>有n(n&lt;=100)个整数，已经按照从小到大顺序排列好，现在另外给一个整数m，<br>请将该数插入到序列中，并使新的序列仍然有序。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，<br>第二行是已经有序的n个数的数列。n和m同时为0标示输入数据的结束，本行不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出插入新的元素后的数列。</p><p><strong>Sample Input</strong><br>3 3<br>1 2 4<br>0 0</p><p><strong>Sample Output</strong><br>1 2 3 4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m &amp;&amp; (n || m)) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">a[n] = m;</span><br><span class="line">sort(a, a+n+<span class="number">1</span>); <span class="comment">//+1是因为又多了一个m数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2020-绝对值排序"><a href="#2020-绝对值排序" class="headerlink" title="2020 绝对值排序"></a>2020 绝对值排序</h3><p><strong>Problem Description</strong><br>输入n(n&lt;=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。</p><p><strong>Sample Input</strong><br>3 3 -4 2<br>4 0 1 2 -3<br>0</p><p><strong>Sample Output</strong><br>-4 3 2<br>-3 2 1 0</p><p><strong>方法一</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">b[i] = <span class="built_in">abs</span>(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(b, b+n);</span><br><span class="line">reverse(b, b+n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] == -a[j]) &#123;</span><br><span class="line">b[i] = -b[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>(a) &gt; <span class="built_in">abs</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(a, a+n, compare);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2021-发工资"><a href="#2021-发工资" class="headerlink" title="2021 发工资"></a>2021 发工资</h3><p><strong>Problem Description</strong><br>作为杭电的老师，8号这一天是发工资的日子，财务处的小胡老师最近就在考虑一个问题：<br>如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？<br>这里假设老师的工资都是正整数，单位元，人民币一共有100元、50元、10元、5元、2元和1元六种。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例的第一行是一个整数n（n&lt;100），表示老师的人数，然后是n个老师的工资。<br>n=0表示输入的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例输出一个整数x,表示至少需要准备的人民币张数。每个输出占一行。</p><p><strong>Sample Input</strong><br>3<br>1 2 3<br>0</p><p><strong>Sample Output</strong><br>4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;           <span class="comment">//人民币张数</span></span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">100</span>];            <span class="comment">//老师工资</span></span><br><span class="line">        <span class="keyword">int</span> b, ws, s, w, e, y; <span class="comment">//六种面值的张数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">            b = a[i] / <span class="number">100</span>;</span><br><span class="line">            ws = a[i] % <span class="number">100</span> / <span class="number">50</span>;</span><br><span class="line">            s = a[i] % <span class="number">100</span> % <span class="number">50</span> / <span class="number">10</span>;</span><br><span class="line">            w = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> / <span class="number">5</span>;</span><br><span class="line">            e = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> % <span class="number">5</span> / <span class="number">2</span>;</span><br><span class="line">            y = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> % <span class="number">5</span> % <span class="number">2</span>;</span><br><span class="line">            num += b + ws + s + w + e + y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-海选女主角"><a href="#2022-海选女主角" class="headerlink" title="2022 海选女主角"></a>2022 海选女主角</h3><p><strong>Problem Description</strong><br>hss开办了一个女友竞选面试，面试那天，来了m<em>n个MM，站成一个m</em>n的队列，hss的助理团为每个MM打了分数，分数都是32位有符号整数。如果MM不太优秀，分数有可能是负数哦! 奇怪的是，hss的目的是要选一个面试分数绝对值（必须还是32位整数）最大的MM，差到极点也是好。</p><p><strong>Input</strong><br>输入数据有多组，每组的第一行是两个整数m和n，表示应聘MM的总共的行列数，然后是m行整数，每行有n个，m和n的定义见题目的描述。</p><p><strong>Output</strong><br>对于每组输入数据，输出三个整数x,y和s，分别表示选中的MM的行号、列号和分数。<br>note:行号和列号从一开始，如果有多个MM的分数绝对值一样，那么输出排在最前面的一个（即行号最小的那个，如果行号相同则取列号最小的那个）。</p><p><strong>Sample Input</strong><br>2 3<br>1 4 -3<br>-7 3 0</p><p><strong>Sample Output</strong><br>2 1 -7</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> mm[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>, I, J;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; mm[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(max) &lt; <span class="built_in">abs</span>(mm[i][j])) &#123;</span><br><span class="line">max = mm[i][j];</span><br><span class="line">I = i;</span><br><span class="line">J = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; I+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; J+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; max&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2023-求平均成绩"><a href="#2023-求平均成绩" class="headerlink" title="2023 求平均成绩"></a>2023 求平均成绩</h3><p><strong>Problem Description</strong><br>假设一个班有n(n&lt;=50)个学生，每人考m(m&lt;=5)门课，求每个学生的平均成绩和每门课的平均成绩，并输出各科成绩均大于等于平均成绩的学生数量。</p><p>Inp<br>输入数据有多个测试实例，每个测试实例的第一行包括两个整数n和m，分别表示学生数和课程数。然后是n行数据，每行包括m个整数（即：考试分数）。</p><p><strong>Output</strong><br>对于每个测试实例，输出3行数据，第一行包含n个数据，表示n个学生的平均成绩，结果保留两位小数；第二行包含m个数据，表示m门课的平均成绩，结果保留两位小数；第三行是一个整数，表示该班级中各科成绩均大于等于平均成绩的学生数量。<br>每个测试实例后面跟一个空行。</p><p><strong>Sample Input</strong><br>2 2<br>5 10<br>10 20</p><p><strong>Sample Output</strong><br>7.50 15.00<br>7.50 15.00<br>1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">double</span> Savg[<span class="number">50</span>], Cavg[<span class="number">5</span>];  <span class="comment">//数组大小要大于题目给定的极值 </span></span><br><span class="line"><span class="keyword">int</span> sc[<span class="number">50</span>][<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;  <span class="comment">//各科成绩均 &gt;= 平均成绩的学生数量</span></span><br><span class="line"><span class="built_in">memset</span>(Savg, <span class="number">0</span>, <span class="keyword">sizeof</span>(Savg));</span><br><span class="line"><span class="built_in">memset</span>(Cavg, <span class="number">0</span>, <span class="keyword">sizeof</span>(Cavg));</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入每名学生成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; sc[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求每位同学的平均成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">//学生</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;  <span class="comment">//课程</span></span><br><span class="line">Savg[i] += sc[i][j];  <span class="comment">//把第i位同学所有课程成绩累加</span></span><br><span class="line">Cavg[j] += sc[i][j];  <span class="comment">//把第j门课程所有同学成绩累加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Savg[i] /= (m*<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, Savg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求每们课的平均成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Cavg[i] /= (n*<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, Cavg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求各科成绩均 &gt;= 平均成绩的学生数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">//学生</span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;  <span class="comment">//1代表符合，0代表不符合 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;  <span class="comment">//课程</span></span><br><span class="line"><span class="keyword">if</span> (sc[i][j] &lt; Cavg[j]) &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//注意题目要求：每个实例后跟一个空行 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2024-C语言合法标识符判断"><a href="#2024-C语言合法标识符判断" class="headerlink" title="2024 C语言合法标识符判断"></a>2024 C语言合法标识符判断</h3><p><strong>Problem Description</strong><br>输入一个字符串，判断其是否是C的合法标识符。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，数据的第一行是一个整数n，表示测试实例的个数，<br>然后是n行输入数据，每行是一个长度不超过50的字符串。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行。如果输入数据是C的合法标识符，则输出”yes”，否则，输出“no”。</p><p><strong>Sample Input</strong><br>3<br>12ajf<br>fi8x_a<br>ff  ai_2</p><p><strong>Sample Output</strong><br>no<br>yes<br>no</p><div class="note success no-icon flat"><p>提示：合法标识符由字母、下划线、数字这三个方面组成，但开头必须是字母或下划线</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    getchar(); <span class="comment">//把无用的回车字符吸收掉</span></span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">50</span>];</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>; <span class="comment">// 0不满足，1满足</span></span><br><span class="line">        gets(s);</span><br><span class="line">        <span class="keyword">if</span> ((s[<span class="number">0</span>] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[<span class="number">0</span>] &lt;= <span class="string">&#x27;z&#x27;</span>) || (s[<span class="number">0</span>] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[<span class="number">0</span>] &lt;= <span class="string">&#x27;Z&#x27;</span>) ||</span><br><span class="line">            s[<span class="number">0</span>] == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!((s[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;z&#x27;</span>) ||</span><br><span class="line">                      (s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) || (s[i] == <span class="string">&#x27;_&#x27;</span>) ||</span><br><span class="line">                      (s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>))) &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2025-查找最大字母"><a href="#2025-查找最大字母" class="headerlink" title="2025 查找最大字母"></a>2025 查找最大字母</h3><p><strong>Problem Description</strong><br>对于输入的每个字符串，查找其中的最大字母，在该字母后面插入字符串“(max)”。</p><p><strong>Input</strong><br>输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母构成。</p><p><strong>Output</strong><br>对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，<br>如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。</p><p><strong>Sample Input</strong><br>abcdefgfedcba<br>xxxxx</p><p><strong>Sample Output</strong><br>abcdefg(max)fedcba<br>x(max)x(max)x(max)x(max)x(max)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a) &#123;</span><br><span class="line"><span class="keyword">char</span> max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; a[i]) &#123;</span><br><span class="line">max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line"><span class="keyword">if</span> (max == a[i]) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;(max)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2026-首字母变大写"><a href="#2026-首字母变大写" class="headerlink" title="2026 首字母变大写"></a>2026 首字母变大写</h3><p><strong>Problem Description</strong><br>输入一个英文句子，将每个单词的第一个字母改成大写字母。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例是一个长度不超过100的英文句子，占一行。</p><p><strong>Output</strong><br>请输出按照要求改写后的英文句子。</p><p><strong>Sample Input</strong><br>i like acm<br>i want to get an accepted</p><p><strong>Sample Output</strong><br>I Like Acm<br>I Want To Get An Accepted</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">while</span>(gets(s)) &#123;</span><br><span class="line">s[<span class="number">0</span>] -= <span class="number">32</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">s[i+<span class="number">1</span>] -= <span class="number">32</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; s&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2027-统计元音"><a href="#2027-统计元音" class="headerlink" title="2027 统计元音"></a>2027 统计元音</h3><p><strong>Problem Description</strong><br>统计每个元音字母在字符串中出现的次数。</p><p><strong>Input</strong><br>输入数据首先包括一个整数n，表示测试实例的个数，<br>然后是n行长度不超过100的字符串。</p><p><strong>Output</strong><br>对于每个测试实例输出5行，格式如下：<br>a:num1<br>e:num2<br>i:num3<br>o:num4<br>u:num5<br>多个测试实例之间由一个空行隔开。</p><p>请特别注意：最后一块输出后面没有空行：）</p><p><strong>Sample Input</strong><br>2<br>aeiou<br>my name is ignatius</p><p><strong>Sample Output</strong><br>a:1<br>e:1<br>i:1<br>o:1<br>u:1</p><p>a:2<br>e:1<br>i:3<br>o:0<br>u:1</p> <div class="note warning no-icon flat"><p>注意：定义变量时变量名不要搞重复了</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, a, e, i, o, u;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        a = e = i = o = u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> c[<span class="number">100</span>];</span><br><span class="line">        gets(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; c[k] != <span class="string">&#x27;\0&#x27;</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c[k] == <span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line">                a++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;e&#x27;</span>) &#123;</span><br><span class="line">                e++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;i&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;o&#x27;</span>) &#123;</span><br><span class="line">                o++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;u&#x27;</span>) &#123;</span><br><span class="line">                u++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;e:&quot;</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;i:&quot;</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;o:&quot;</span> &lt;&lt; o &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;u:&quot;</span> &lt;&lt; u &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span> (n) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2028-最小公倍数"><a href="#2028-最小公倍数" class="headerlink" title="2028 最小公倍数"></a>2028 最小公倍数</h3><p><strong>Problem Description</strong><br>求n个数的最小公倍数。</p><p><strong>Input</strong><br>输入包含多个测试实例，每个测试实例的开始是一个正整数n，然后是n个正整数。</p><p><strong>Output</strong><br>为每组测试数据输出它们的最小公倍数，每个测试实例的输出占一行。你可以假设最后的输出是一个32位的整数。</p><p><strong>Sample Input</strong><br>2 4 6<br>3 2 5 7</p><p><strong>Sample Output</strong><br>12<br>70</p><div class="note success no-icon flat"><p>提示：最小公倍数为<strong>俩数之积除它们的最大公约数</strong>，而最大公约数采用<strong>辗转相除法</strong>。</p><p><strong>辗转相除法 思路</strong>：</p><p>有两整数a和b</p><ol><li>a%b得余数c</li><li>若c=0，则b即为两数的最大公约数</li><li>若c≠0，则a=b，b=c，再回去执行步骤1</li></ol></div><blockquote><p>本题 <code>a = a / divisor(a, b) * b</code> 这个地方，OJ只能让b在后面乘才能通过，终于想明白了，因为如果b先乘，可能数字会越界，所以先除，数变小了再乘，细节。。。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divisor</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;  <span class="comment">//用来求最大公约数，运用到了递归</span></span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> divisor(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; b;</span><br><span class="line">a = a / divisor(a, b) * b; <span class="comment">//每一次和新输入的数进行求最小公倍数 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2029-回文数（简单版）"><a href="#2029-回文数（简单版）" class="headerlink" title="2029 回文数（简单版）"></a>2029 回文数（简单版）</h3><p><strong>Problem Description</strong><br>“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。<br>请写一个程序判断读入的字符串是否是“回文”。</p><p><strong>Input</strong><br>输入包含多个测试实例，输入数据的第一行是一个正整数n,表示测试实例的个数，后面紧跟着是n个字符串。</p><p><strong>Output</strong><br>如果一个字符串是回文串，则输出”yes”,否则输出”no”.</p><p><strong>Sample Input</strong><br>4<br>level<br>abcde<br>noon<br>haha</p><p><strong>Sample Output</strong><br>yes<br>no<br>yes<br>no</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> str, s;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        s = str;</span><br><span class="line">        reverse(str.begin(), str.end());</span><br><span class="line">        <span class="keyword">if</span> (str == s) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2030-汉字统计"><a href="#2030-汉字统计" class="headerlink" title="2030 汉字统计"></a>2030 汉字统计</h3><p><strong>Problem Description</strong><br>统计给定文本文件中汉字的个数。</p><p><strong>Input</strong><br>输入文件首先包含一个整数n，表示测试实例的个数，然后是n段文本。</p><p><strong>Output</strong><br>对于每一段文本，输出其中的汉字的个数，每个测试实例的输出占一行。</p><p>[提示:]从汉字机内码的特点考虑~</p><p><strong>Sample Input</strong><br>2<br>WaHaHa! WaHaHa! 今年过节不说话要说只说普通话WaHaHa! WaHaHa!<br>马上就要期末考试了Are you ready?</p><p><strong>Sample Output</strong><br>14<br>9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, count;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((c = getchar()) != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (c &lt; <span class="number">0</span>) &#123;  <span class="comment">//汉字ASCii码小于0</span></span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; count / <span class="number">2</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//因为汉字有2个字节，所以除以2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2032-杨辉三角打印"><a href="#2032-杨辉三角打印" class="headerlink" title="2032 杨辉三角打印"></a>2032 杨辉三角打印</h3><p><strong>Problem Description</strong><br>还记得中学时候学过的杨辉三角吗？具体的定义这里不再描述，你可以参考以下的图形：<br>1<br>1 1<br>1 2 1<br>1 3 3 1<br>1 4 6 4 1<br>1 5 10 10 5 1</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例的输入只包含一个正整数n（1&lt;=n&lt;=30），表示将要输出的杨辉三角的层数。</p><p><strong>Output</strong><br>对应于每一个输入，请输出相应层数的杨辉三角，每一层的整数之间用一个空格隔开，每一个杨辉三角后面加一个空行。</p><p><strong>Sample Input</strong><br>2 3</p><p><strong>Sample Output</strong><br>1<br>1 1</p><p>1<br>1 1<br>1 2 1</p> <div class="note warning no-icon flat"><p>注意：</p><ol><li>不要用阶乘的方式，因为容易超出字节长度。</li><li>每行结尾不要有空格</li></ol></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, i, j;</span><br><span class="line"><span class="keyword">int</span> yhsj[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line">yhsj[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">yhsj[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">yhsj[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> || j == i) &#123;</span><br><span class="line">yhsj[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">yhsj[i][j] = yhsj[i<span class="number">-1</span>][j] + yhsj[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; yhsj[i][j]&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; yhsj[i][j]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2035-A-B"><a href="#2035-A-B" class="headerlink" title="2035 A^B"></a>2035 A^B</h3><p><strong>Problem Description</strong><br>求A^B的最后三位数表示的整数。<br>说明：A^B的含义是“A的B次方”</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个实例占一行，由两个正整数A和B组成（1&lt;=A,B&lt;=10000），<br>如果A=0, B=0，则表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，请输出A^B的最后三位表示的整数，每个输出占一行。</p><p><strong>Sample Input</strong><br>2 3<br>12 6<br>6789 10000<br>0 0</p><p><strong>Sample Output</strong><br>8<br>984<br>1 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> A, B;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; A&gt;&gt; B &amp;&amp; A &amp;&amp; B) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = A;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B - <span class="number">1</span>; i++) &#123;</span><br><span class="line">ans = (ans * A) % <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2039-三角形"><a href="#2039-三角形" class="headerlink" title="2039 三角形"></a>2039 三角形</h3><p><strong>Problem Description</strong><br>给定三条边，请你判断一下能不能组成一个三角形。</p><p><strong>Input</strong><br>输入数据第一行包含一个数M，接下有M行，每行一个实例，包含三个正数A,B,C。其中A,B,C &lt;1000;</p><p><strong>Output</strong><br>对于每个测试实例，如果三条边长A,B,C能组成三角形的话，输出YES，否则NO。</p><p><strong>Sample Input</strong><br>2<br>1 2 3<br>2 2 2</p><p><strong>Sample Output</strong><br>NO<br>YES</p> <div class="note warning no-icon flat"><p>注意：ABC的描述是正数(用double)，别理解成整数了(不用int)</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> M; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; M;</span><br><span class="line"><span class="keyword">while</span> (M--) &#123;</span><br><span class="line"><span class="keyword">double</span> A, B, C; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; A&gt;&gt; B&gt;&gt; C;</span><br><span class="line"><span class="keyword">if</span> ((A+B)&gt;C &amp;&amp; (A+C)&gt;B &amp;&amp; (B+C)&gt;A </span><br><span class="line">&amp;&amp; A&lt;<span class="number">1000</span> &amp;&amp; B&lt;<span class="number">1000</span> &amp;&amp; C&lt;<span class="number">1000</span></span><br><span class="line">&amp;&amp; A&gt;<span class="number">0</span> &amp;&amp; B&gt;<span class="number">0</span> &amp;&amp; C&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2040-亲和数"><a href="#2040-亲和数" class="headerlink" title="2040 亲和数"></a>2040 亲和数</h3><p><strong>Problem Description</strong><br>古希腊数学家毕达哥拉斯在自然数研究中发现，220的所有真约数(即不是自身的约数)之和为：<br>1+2+4+5+10+11+20+22+44+55+110＝284。<br>而284的所有真约数为1、2、4、71、 142，加起来恰好为220。人们对这样的数感到很惊奇，并称之为亲和数。<br>一般地讲，如果两个数中任何一个数都是另一个数的真约数之和，则这两个数就是亲和数。<br>你的任务就编写一个程序，判断给定的两个数是否是亲和数</p><p><strong>Input</strong><br>输入数据第一行包含一个数M，接下有M行，每行一个实例,包含两个整数A,B； 其中 0 &lt;= A,B &lt;= 600000 ;</p><p><strong>Output</strong><br>对于每个测试实例，如果A和B是亲和数的话输出YES，否则输出NO。</p><p><strong>Sample Input</strong><br>2<br>220 284<br>100 200</p><p><strong>Sample Output</strong><br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>], sum0, sum1;</span><br><span class="line">sum0 = sum1 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[<span class="number">0</span>]&gt;&gt; a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">0</span>] / <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">0</span>] % i == <span class="number">0</span>) &#123;</span><br><span class="line">sum0 += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">1</span>] / <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">1</span>] % i == <span class="number">0</span>) &#123;</span><br><span class="line">sum1 += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum1==a[<span class="number">0</span>] &amp;&amp; sum0==a[<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2042-老汉付过路费"><a href="#2042-老汉付过路费" class="headerlink" title="2042 老汉付过路费"></a>2042 老汉付过路费</h3><p><strong>Problem Description</strong><br>徐老汉带着一群羊准备到另一个地方卖掉，路途有很多路口收费站，由于徐老汉没钱，收费员就将他的羊拿走一半，<br>看到老汉泪水涟涟，心疼又还给老汉一只。巧的是，后面每过一个收费站，都是拿走当时羊的一半，<br>然后退还一只，等到老汉到达市场，就只剩下3只羊了，你能帮忙算一下老汉最初有多少只羊吗？</p><p><strong>Input</strong><br>输入数据第一行是一个整数N，下面由N行组成，每行包含一个整数a(0&lt;a&lt;=30),表示收费站的数量。</p><p><strong>Output</strong><br>对于每个测试实例，请输出最初的羊的数量,每个测试实例的输出占一行。</p><p><strong>Sample Input</strong><br>2<br>1<br>2</p><p><strong>Sample Output</strong><br>4<br>6</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">station</span><span class="params">(<span class="keyword">int</span> sheep, <span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++) &#123;</span><br><span class="line">        sheep = <span class="number">2</span> * (sheep - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sheep;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, a, sheep = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">while</span> (N--) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; station(sheep, a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2043-判断安全密码"><a href="#2043-判断安全密码" class="headerlink" title="2043 判断安全密码"></a>2043 判断安全密码</h3><p><strong>Problem Description</strong><br>首先，我们要设一个安全的密码。那什么样的密码才叫安全的呢？<br>一般来说一个比较安全的密码至少应该满足下面两个条件：<br>(1)密码长度大于等于8，且不要超过16。<br>(2)密码中的字符应该来自下面“字符类别”中四组中的至少三组。<br>这四个字符类别分别为：<br>1.大写字母：A,B,C…Z;<br>2.小写字母：a,b,c…z;<br>3.数字：0,1,2…9;<br>4.特殊符号：~,!,@,#,$,%,^;</p><p>给你一个密码，你的任务就是判断它是不是一个安全的密码。</p><p><strong>Input</strong><br>输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。</p><p><strong>Output</strong><br>对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。</p><p><strong>Sample Input</strong><br>3<br>a1b2c3d4<br>Linle@ACM<br>^~^@^@!%</p><p><strong>Sample Output</strong><br>NO<br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> M;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; M;</span><br><span class="line">getchar(); </span><br><span class="line"><span class="keyword">while</span> (M--) &#123;</span><br><span class="line"><span class="keyword">char</span> pwd;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d, num, flag;</span><br><span class="line">a = b = c = d = num = <span class="number">0</span>;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((pwd = getchar()) != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">c = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd == <span class="string">&#x27;~&#x27;</span> || pwd == <span class="string">&#x27;!&#x27;</span> || pwd == <span class="string">&#x27;@&#x27;</span></span><br><span class="line">|| pwd == <span class="string">&#x27;#&#x27;</span> || pwd == <span class="string">&#x27;$&#x27;</span> || pwd == <span class="string">&#x27;%&#x27;</span> || pwd == <span class="string">&#x27;^&#x27;</span>) &#123;</span><br><span class="line">d = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">num++; <span class="comment">// 统计密码长度 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123; <span class="comment">// flag为0则说明之前已经打印了NO，无需在判断了</span></span><br><span class="line"><span class="keyword">if</span> (a + b + c + d &gt;= <span class="number">3</span> &amp;&amp; num &gt;= <span class="number">8</span> &amp;&amp; num &lt;= <span class="number">16</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2055-一个简单的问题"><a href="#2055-一个简单的问题" class="headerlink" title="2055 一个简单的问题"></a>2055 一个简单的问题</h3><p>问题描述<br>我们定义f（A）= 1，f（a）= -1，f（B）= 2，f（b）= -2，… f（Z）= 26，f（z）= -26;<br>给您一个字母x和一个数字y，您应该输出y + f（x）的结果。</p><p>输入项<br>第一行包含一个数字T，然后是T行，每行是一个case。每个case包含一个字母和一个数字。</p><p>输出量<br>对于每种情况，您应将y + f（x）的结果放在一行上。</p><p>样本输入<br>6<br>R 1<br>P 2<br>G 3<br>r 1<br>p 2<br>g 3</p><p>样本输出<br>19<br>18<br>10<br>-17<br>-14<br>-4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> length 1000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">a += <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">97</span>) &#123;</span><br><span class="line">a = <span class="number">96</span> - a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a -= <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">char</span> ltr[length]; </span><br><span class="line"><span class="keyword">int</span> num[length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; ltr[i]&gt;&gt; num[i];  <span class="comment">//字母和数字都输入进去</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; num[i] + f(ltr[i])&lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//计算结果 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2070-斐波那契数"><a href="#2070-斐波那契数" class="headerlink" title="2070 斐波那契数"></a>2070 斐波那契数</h3><p>问题描述<br>您对此问题的目标是开发一个程序，该程序将生成一个斐波纳契数。fibbonacci函数的定义如下：<br>f（0）= 0<br>f（1）= 1<br>f（n）= f（n-1）+ f（n-2）<br>您的程序应该能够处理n中的n值。范围从0到50。</p><p>输入项<br>每个测试用例在一行中由一个整数n组成，其中0≤n≤50。输入以-1终止。</p><p>输出量<br>针对每个测试用例，在一行中打印出答案。</p><p>样本输入<br>3<br>4<br>5<br>-1</p><p>样本输出<br>2<br>3<br>5</p> <div class="note warning no-icon flat"><p>注意：函数返回值也要是long long型</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">51</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">50</span>; i++) &#123;  <span class="comment">//斐波那契数组 </span></span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[n]&lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2071-最大身高"><a href="#2071-最大身高" class="headerlink" title="2071 最大身高"></a>2071 最大身高</h3><p>问题描述<br>班上有一些学生，你能帮助老师找到最高的学生吗？</p><p>输入项<br>有一些情况。第一行包含一个整数t，表示情况；每个案例的整数n（1≤n≤100），后跟n个学生的身高。</p><p>输出量<br>对于每种情况，输出的最高高度均为两个十进制小数点的高度；</p><p>样本输入<br>2<br>3 170.00 165.00 180.00<br>4 165.00 182.00 172.00 160.00</p><p>样本输出<br>180.00<br>182.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t-- &amp;&amp; <span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">100</span>], max;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; a[i]) &#123;</span><br><span class="line">max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2073-无限的路"><a href="#2073-无限的路" class="headerlink" title="2073 无限的路"></a>2073 无限的路</h3><p>甜甜从小就喜欢画图画，最近他买了一支智能画笔，由于刚刚接触，<br>所以甜甜只会用它来画直线，于是他就在平面直角坐标系中画出如下的图形：<br>如图（2073 无限的路.jpg）<br>甜甜的好朋友蜜蜜发现上面的图还是有点规则的，于是他问甜甜：<br>在你画的图中，我给你两个点，请你算一算连接两点的折线长度（即沿折线走的路线长度）吧。</p><p><strong>Input</strong><br>第一个数是正整数N（≤100）。代表数据的组数。<br>每组数据由四个非负整数组成x1，y1，x2，y2；所有的数都不会大于100。</p><p><strong>Output</strong><br>对于每组数据，输出两点(x1,y1),(x2,y2)之间的折线距离。注意输出结果精确到小数点后3位。</p><p><strong>Sample Input</strong><br>5<br>0 0 0 1<br>0 0 1 0<br>2 3 3 1<br>99 99 9 9<br>5 5 5 5</p><p><strong>Sample Output</strong><br>1.000<br>2.414<br>10.646<br>54985.047<br>0.000</p><div class="note success no-icon flat"><p>思路：先算出每个点到原点的距离，然后再相减。在算点到原点距离时，要将斜率为-1的线和非-1的线分开算，最后加在一起。</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> len = <span class="number">0</span>;</span><br><span class="line">n = a + b;  <span class="comment">//可称为截距</span></span><br><span class="line"><span class="comment">// 斜率为-1的线的长度 </span></span><br><span class="line">len = n * (n - <span class="number">1</span>) / <span class="number">2</span> * <span class="built_in">sqrt</span>(<span class="number">2</span>);</span><br><span class="line">len += a * <span class="built_in">sqrt</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 斜率为非-1的线的长度</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">len += <span class="built_in">sqrt</span>(i*i + (i - <span class="number">1</span>)*(i - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; N;</span><br><span class="line"><span class="keyword">while</span> (N--) &#123;</span><br><span class="line"><span class="keyword">int</span> x1, y1, x2, y2;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; x1&gt;&gt; y1&gt;&gt; x2&gt;&gt; y2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, <span class="built_in">fabs</span>(fun(x1, y1) - fun(x2, y2)));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2075-A-B"><a href="#2075-A-B" class="headerlink" title="2075 A%B"></a>2075 A%B</h3><p><strong>Problem Description</strong><br>正整数A是否能被正整数B整除?</p><p><strong>Input</strong><br>输入数据的第一行是一个数据T，表示有T组数据。<br>每组数据有两个正整数A和B(A,B&lt;10^9)。</p><p><strong>Output</strong><br>对于每组输入数据，输出”YES”表示可以被整除，”NO”表示不能被整除。</p><p><strong>Sample Input</strong><br>2<br>4 2<br>5 3</p><p><strong>Sample Output</strong><br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (a % b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2076-时针夹角大小"><a href="#2076-时针夹角大小" class="headerlink" title="2076 时针夹角大小"></a>2076 时针夹角大小</h3><p><strong>Problem Description</strong><br>时间过的好快，一个学期就这么的过去了，xhd在傻傻的看着表，出于对数据的渴望，突然他想知道这个表的时针和分针的夹角是多少。现在xhd知道的只有时间，请你帮他算出这个夹角。</p><p>注：夹角的范围[0，180]，时针和分针的转动是连续而不是离散的。</p><p><strong>Input</strong><br>输入数据的第一行是一个数据T，表示有T组数据。<br>每组数据有三个整数h(0 &lt;= h &lt; 24)，m(0 &lt;= m &lt; 60)，s(0 &lt;= s &lt; 60)分别表示时、分、秒。</p><p><strong>Output</strong><br>对于每组输入数据，输出夹角的大小的整数部分。</p><p><strong>Sample Input</strong><br>2<br>8 3 17<br>5 13 30</p><p><strong>Sample Output</strong><br>138<br>75</p> <div class="note warning no-icon flat"><p>注意：h赋值时，要知道m已经值变了，所以要用temp获取最初的值</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">double</span> h, m, s, temp;</span><br><span class="line"><span class="keyword">int</span> angle;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; h&gt;&gt; m&gt;&gt; s;</span><br><span class="line"><span class="keyword">if</span> (h &gt;= <span class="number">12</span>) &#123;</span><br><span class="line">h -= <span class="number">12</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp = m;</span><br><span class="line">m = m*<span class="number">6</span> + s/<span class="number">10</span>;</span><br><span class="line">h = h*<span class="number">30</span> + temp/<span class="number">2</span> + s/<span class="number">120</span>;</span><br><span class="line">angle = <span class="built_in">fabs</span>(m - h) &gt; <span class="number">180</span> ? <span class="built_in">fabs</span>(<span class="number">360</span> - <span class="built_in">fabs</span>(m - h)) : <span class="built_in">fabs</span>(m - h);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; angle&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2078-复习时间"><a href="#2078-复习时间" class="headerlink" title="2078 复习时间"></a>2078 复习时间</h3><p><strong>Problem Description</strong><br>hss复习有个习惯，在复习完一门课后，他总是挑一门更简单的课进行复习，而他复习这门课的效率为两门课的难度差的平方，<br>而复习第一门课的效率为100和这门课的难度差的平方。hss这学期选了n门课，但是一晚上他最多只能复习m门课，<br>请问他一晚上复习的最高效率值是多少？</p><p><strong>Input</strong><br>输入数据的第一行是一个数据T，表示有T组数据。<br>每组数据的第一行是两个整数n(1 &lt;= n &lt;= 40)，m(1 &lt;= m &lt;= n)。<br>接着有n行，每行有一个正整数a(1 &lt;= a &lt;= 100)，表示这门课的难度值。</p><p><strong>Output</strong><br>对于每组输入数据，输出一个整数，表示最高效率值。</p><p><strong>Sample Input</strong><br>2<br>2 2<br>52<br>25<br>12 5<br>89<br>64<br>6<br>43<br>56<br>72<br>92<br>23<br>20<br>22<br>37<br>31</p><p><strong>Sample Output</strong><br>5625<br>8836</p><div class="note success no-icon flat"><p>提示：其实只要是找出难度系数最低的那个跟100的差平方一下就是答案了，这道题看似难，其实题目没有出好，很多条件/变量都是和答案的解出没关系</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//找出最小值 </span></span><br><span class="line"><span class="keyword">int</span> min = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (min &gt; d[i]) &#123;</span><br><span class="line">min = d[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(j&lt;T) &#123;</span><br><span class="line"><span class="keyword">int</span> n, m, d[<span class="number">40</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; d[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="number">100</span>-min(d, n))*(<span class="number">100</span>-min(d, n))&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2081-手机短号"><a href="#2081-手机短号" class="headerlink" title="2081 手机短号"></a>2081 手机短号</h3><p><strong>Problem Description</strong><br>手机号是一个11位长的数字串，同时作为学生，可以申请加入校园网，如果加入成功，你将另外拥有一个短号。<br>假设所有的短号都是是 6 + 手机号的后5位，比如号码为13512345678的手机，对应的短号就是645678。<br>现在，如果给你一个11位长的手机号码，你能找出对应的短号吗？</p><p><strong>Input</strong><br>输入数据的第一行是一个N(N &lt;= 200)，表示有N个数据，接下来的N行每一行为一个11位的手机号码。</p><p><strong>Output</strong><br>输出应包括N行，每行包括一个对应的短号，输出应与输入的顺序一致。</p><p><strong>Sample Input</strong><br>2<br>13512345678<br>13787654321</p><p><strong>Sample Output</strong><br>645678<br>654321</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; N;</span><br><span class="line"><span class="keyword">char</span> pnum[<span class="number">200</span>][<span class="number">11</span>], lnum[<span class="number">200</span>][<span class="number">6</span>]; <span class="comment">//放手机号和放短号的二位数组 </span></span><br><span class="line"><span class="built_in">memset</span>(lnum, <span class="string">&#x27;6&#x27;</span>, <span class="keyword">sizeof</span>(lnum));  <span class="comment">//将短号数组初始化为6，只有char型数组才可以初始化为某字符 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//输入电话号码 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; pnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//获取短号 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">6</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">lnum[i][j<span class="number">-5</span>] = pnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//输出短号 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; lnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">string</span> newstr;</span><br><span class="line">    <span class="keyword">int</span> lines;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lines;</span><br><span class="line">    <span class="keyword">while</span>(lines--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;6&#x27;</span>&lt;&lt; &amp;str[<span class="number">6</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2090-算菜价"><a href="#2090-算菜价" class="headerlink" title="2090 算菜价"></a>2090 算菜价</h3><p><strong>Problem Description</strong><br>妈妈每天都要出去买菜，但是回来后，兜里的钱也懒得数一数，到底花了多少钱真是一笔糊涂帐。现在你可以给她写程序算一下。</p><p><strong>Input</strong><br>输入含有一些数据组，每组数据包括菜种（字串），数量（计量单位不论，一律为double型数）和单价（double型数，表示人民币元数），<br>因此，每组数据的菜价就是数量乘上单价啊。菜种、数量和单价之间都有空格隔开的。</p><p><strong>Output</strong><br>支付菜价的时候，由于最小支付单位是角，所以总是在支付的时候采用四舍五入的方法把分头去掉。最后，请输出一个精度为角的菜价总量。</p><p><strong>Sample Input</strong><br>青菜 1  2<br>罗卜 2  1.5<br>鸡腿 2  4.2</p><p><strong>Sample Output</strong><br>13.4</p> <div class="note warning no-icon flat"><p>注意：本题有缺陷，就是没有说明输入终止条件，本人试出来终止条件是输入EOF，不过和我们没关系，OJ系统自己会输入判断的</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> cname[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">double</span> num, price, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt; cname&gt;&gt; num&gt;&gt; price) &#123;</span><br><span class="line">sum += num*price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2092-整数解"><a href="#2092-整数解" class="headerlink" title="2092 整数解"></a>2092 整数解</h3><p><strong>Problem Description</strong><br>有二个整数，它们加起来等于某个整数，乘起来又等于另一个整数，它们到底是真还是假，<br>也就是这种整数到底存不存在，实在有点说不准，你能快速回答吗？看来只能通过编程。<br>例如：<br>x + y = 9，x * y = 15 ? 找不到这样的整数x和y<br>1+4=5，1<em>4=4，所以，加起来等于5，乘起来等于4的二个整数为1和4<br>7+(-8)=-1，7</em>（-8）=-56，所以，加起来等于-1，乘起来等于-56的二个整数为7和-8</p><p><strong>Input</strong><br>输入数据为成对出现的整数n，m（-10000&lt;n,m&lt;10000），它们分别表示整数的和与积，如果两者都为0，则输入结束。</p><p><strong>Output</strong><br>只需要对于每个n和m，输出“Yes”或者“No”，明确有还是没有这种整数就行了。</p><p><strong>Sample Input</strong><br>9 15<br>5 4<br>1 -56<br>0 0</p><p><strong>Sample Output</strong><br>No<br>Yes<br>Yes</p><blockquote><p>关键：▲&gt;=0表示方程有解，sqrt_t*sqrt_t == t表示解都为整数</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m &amp;&amp; (n || m)) &#123;</span><br><span class="line"><span class="keyword">double</span> t = n*n - <span class="number">4</span>*m;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">sqrt_t</span> = <span class="built_in">sqrt</span>(t);</span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">sqrt_t</span>*<span class="keyword">sqrt_t</span> == t) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2096-小明A-B"><a href="#2096-小明A-B" class="headerlink" title="2096 小明A+B"></a>2096 小明A+B</h3><p><strong>Problem Description</strong><br>小明今年3岁了, 现在他已经能够认识100以内的非负整数, 并且能够进行100以内的非负整数的加法计算.<br>对于大于等于100的整数, 小明仅保留该数的最后两位进行计算, 如果计算结果大于等于100, 那么小明也仅保留计算结果的最后两位.<br>例如, 对于小明来说:</p><p>1) 1234和34是相等的<br>2) 35+80=15</p><p>给定非负整数A和B, 你的任务是代表小明计算出A+B的值.</p><p><strong>Input</strong><br>输入数据的第一行为一个正整数T, 表示测试数据的组数. 然后是T组测试数据. 每组测试数据包含两个非负整数A和B(A和B均在int型可表示的范围内).</p><p><strong>Output</strong><br>对于每组测试数据, 输出小明A+B的结果.</p><p><strong>Sample Input</strong><br>2<br>35 80<br>15 1152</p><p><strong>Sample Output</strong><br>15<br>67</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a%<span class="number">100</span> + b%<span class="number">100</span>) % <span class="number">100</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2098-分拆素数和"><a href="#2098-分拆素数和" class="headerlink" title="2098 分拆素数和"></a>2098 分拆素数和</h3><p><strong>Problem Description</strong><br>把一个偶数拆成两个不同素数的和，有几种拆法呢？</p><p><strong>Input</strong><br>输入包含一些正的偶数，其值不会超过10000，个数不会超过500，若遇0，则结束。</p><p><strong>Output</strong><br>对应每个偶数，输出其拆成不同素数的个数，每个结果占一行。</p><p><strong>Sample Input</strong><br>30<br>26<br>0</p><p><strong>Sample Output</strong><br>3<br>2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sushu</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>; <span class="comment">//0素数，1非素数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++) &#123;  <span class="comment">//判断i素数</span></span><br><span class="line"><span class="keyword">if</span> (a % i == <span class="number">0</span>) &#123;  <span class="comment">//不是素数 </span></span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a &amp;&amp; a) &#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;  <span class="comment">//拆法数量 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; a/<span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (sushu(i) + sushu(a-i) == <span class="number">0</span>) &#123;  <span class="comment">//若i和a-i都为为素数</span></span><br><span class="line">sum++;  <span class="comment">//拆法加1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2099-整除的尾数"><a href="#2099-整除的尾数" class="headerlink" title="2099 整除的尾数"></a>2099 整除的尾数</h3><p><strong>Problem Description</strong><br>一个整数，只知道前几位，不知道末二位，被另一个整数除尽了，那么该数的末二位该是什么呢？</p><p><strong>Input</strong><br>输入数据有若干组，每组数据包含二个整数a，b（0&lt;a&lt;10000, 10&lt;b&lt;100），若遇到0 0则处理结束。</p><p><strong>Output</strong><br>对应每组数据，将满足条件的所有尾数在一行内输出，格式见样本输出。同组数据的输出，其每个尾数之间空一格，行末没有空格。</p><p><strong>Sample Input</strong><br>200 40<br>1992 95<br>0 0</p><p><strong>Sample Output</strong><br>00 40 80<br>15</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b &amp;&amp; (a || b)) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">a *= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a % b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(flag) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">10</span>)  <span class="comment">//个位数前面要加0 </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;0&quot;</span>&lt;&lt;i;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结束语：</p><p>各路好汉们若是有疑问或者建议恳请留言噢！祝各位好运！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 📕笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📜C语言 </tag>
            
            <tag> 📃C++ </tag>
            
            <tag> 🌌蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建框架为Hexo主题为WebStack的网址导航教程</title>
      <link href="posts/61c6c2e8/"/>
      <url>posts/61c6c2e8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前提：</strong></p><p>你曾搭建过hexo博客，确保有一定的经验。若是新手建议搭配<a href="https://zhuanlan.zhihu.com/p/114195340">Hexo搭建博客教程</a>一起食用。</p></blockquote><h2 id="教程参数说明"><a href="#教程参数说明" class="headerlink" title="教程参数说明"></a>教程参数说明</h2><blockquote><p>从今往后所有教程都会使用到下列参数</p></blockquote><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>[UserName]</td><td>项目托管平台注册时的用户名（包括GitHub、Gitee等）</td></tr><tr><td>[BlogRoot]</td><td>博客本地根目录</td></tr><tr><td>[RepoGit]</td><td>远程仓库Git地址</td></tr><tr><td>[RepoName]</td><td>远程仓库名称</td></tr><tr><td>[BranchName]</td><td>仓库分支名称</td></tr><tr><td>[Custom]</td><td>自定义</td></tr></tbody></table><details ><summary> 碎碎念，搭建时的艰辛历程 </summary>              <div class='content'>              <p>我开始以为webstack可以通过像<code>hexo new page xxx</code>一样简单地直接加到博客导航栏里，但经过半天的实践发现没那么简单，再经过大量搜寻最后发现原来它是一个主题，尽管自己已经看到它的文件名叫<code>hexo-theme-webstack</code>。在此之前我还寻思着，这怎么看也不像一个博客网站的Theme，更像一个小网页，所以我消耗了几天的时间去找搭建教程。首先我想吐槽，网上关于WebStack的教程本来就很少，而且WebStack它还有很多框架版本（本网址导航是hexo），就在海淘后零星的几个教程中，又都是WebStack <code>config.yml</code>参数配置讲解的教程，哎心累，但现在我终于搭建成功了，我觉得有必要去写我人生中第一个教程（这应该是全网第一篇吧？😂至少我没找到，可能他们认为这太基础了，默认使用者都会）。最后其实呀，<strong>你只需要像创建你第一个博客那样去创建它</strong>，有搭建Hexo博客经验的小伙伴来说，应该简单不少，甚至不用看本篇。</p>              </div>            </details><p>话不多说，先上效果<a class="btn-beautify button--animated outline blue larger" href="https://navi.hassanwong.top"   title="网址导航Demo"><i class="far fa-hand-point-right fa-fw"></i><span>网址导航Demo</span></a></p><h2 id="网站简介"><a href="#网站简介" class="headerlink" title="网站简介"></a>网站简介</h2><p>本项目是一个网址导航网站主题，内容均由<a href="http://viggoz.com/">viggo</a>收集并整理。本站是由<a href="https://github.com/hassanblog">Hassan Wong</a>基于<a href="https://hexo.io/">Hexo框架</a>主题为<a href="https://github.com/HCLonely/hexo-theme-webstack">WebStack</a>所搭建的。</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>网址导航主要实现两个功能：</p><ol><li>可设为自己默认浏览器页面，方便搜索。</li><li>方便使用自己收藏的网址。</li></ol><h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><blockquote><p>建议先扫视一遍目录中的【雕虫小技】板块</p></blockquote><ol><li><p>在GitHub新建仓库，仓库名随意，选择<code>Public</code>公开按钮，点击<code>Create repository</code>。（如果第一次使用GitHub，名称建议:<code>[UserName].github.io</code>）。</p></li><li><p>在电脑本地任意位置新建仓库文件夹，名称随意。</p></li><li><p>在该文件夹下打开命令行，输入<code>hexo init</code>初始化Hexo资源，稍等片刻你的仓库文件夹会多出以下文件。（<code>[BlogRoot]\themes\.gitkeep</code>文件可删除）</p> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/WebStack_Bulid/image-20210317135122470.png" style="zoom:80%;" /></li><li><p>下载<a href="https://github.com/HCLonely/hexo-theme-webstack">WebStack项目</a>到 <code>[BlogRoot]\themes</code>文件夹下：</p><p> 方法1：直接下载master分支下的<a href="https://codeload.github.com/HCLonely/hexo-theme-webstack/zip/master">ZIP压缩包</a>到该文件夹，解压后删除压缩包。</p><p> 方法2：在该文件夹下打开命令行，输入以下命令。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HCLonely/hexo-theme-webstack.git</span><br><span class="line"><span class="comment"># 推荐输入以下命令，下载速度更快（若失效则用上方命令）</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/HCLonely/hexo-theme-webstack.git</span><br></pre></td></tr></table></figure></li><li><p>修改<code>[BlogRoot]\_config.yml</code>文件<code>theme</code>和<code>deploy</code>配置参数:</p> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line"><span class="addition">+ theme: webstack</span></span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line"><span class="addition">+  type: git</span></span><br><span class="line"><span class="addition">+  repo: [RepoGit]</span></span><br><span class="line"><span class="addition">+  branch: [BranchName]</span></span><br><span class="line"># 2020年10月后[BranchName]默认为main</span><br></pre></td></tr></table></figure></li><li><p>在[BlogRoot]下打开命令行中输入Hexo三连查看效果：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清空缓存</span></span><br><span class="line">hexo g<span class="comment">#部署代码</span></span><br><span class="line">hexo s<span class="comment">#查看效果</span></span><br></pre></td></tr></table></figure><p> 然后在浏览器中输入<code>localhost:4000</code>浏览网站的效果。</p> <details ><summary> 如果提示4000端口被占用（FATAL Port 4000 has been used） </summary>              <div class='content'>              <ol><li><p>命令行中输入<code>sudo lsof -i:4000</code>，查看被占用进程的<code>pid</code></p></li><li><p>再输<code>sudo kill -9 [pid]</code></p></li><li><p>然后再继续<code>hexo s</code>，看到<code>INFO  Hexo is running at ttp://localhost:4000</code>则成功。</p></li></ol>              </div>            </details></li><li><p>最后输入<code>hexo d</code>部署到GitHub远端（如果你第一次部署，可能会要输入GitHub账密）。</p></li><li><p>开启GitHub页面：</p><p> 进入GitHub刚建的仓库–&gt;点击<code>Settings</code>–&gt;在<code>GitHub Pages</code>里的<code>Source</code>里选代码分支–&gt;点击<code>Save</code>。</p></li><li><p>直接点击上方生成的网站链接，或在浏览器中输入网址</p><ul><li>第一次使用博客的选手直接输入：<code>[UserName].github.io</code></li><li><del>老油条</del>则输入<code>[UserName].github.io/[RepoName]/</code></li></ul></li></ol><h3 id="搭建后续"><a href="#搭建后续" class="headerlink" title="搭建后续"></a>搭建后续</h3><p>到此网站初始搭建部署完成🎉，接下来你可以做的事情：</p><ol><li>根据<a href="https://blog.hclonely.com/posts/3cd4fb34/">Hexo版本Webstack的官方文档</a>来进行基本参数配置，或者直接查看本地<code>[BlogRoot]\themes\webstack\README_CN.md</code>文件来配置。</li><li>根据自我需求更换域名。</li><li>自定义美化。</li><li>搭建博客镜像网站，例如Gitee、Vercel、Coding平台。（因为在国内用GitHub搭建的网站访问速度非常慢）。</li></ol><h2 id="雕虫小技"><a href="#雕虫小技" class="headerlink" title="雕虫小技"></a>雕虫小技</h2><ol><li><p>如何获取一个网站的Logo图标？</p><ul><li>在目标网站的首页网址后加上<code>/favicon.ico</code>并敲下<code>Enter</code>，可以得到近90%网站的Logo图标。</li><li>也可以按下<code>Ctrl + U</code>打开网页源码，按下<code>Ctrl+ F</code>搜索<code>ico</code>、<code>logo</code>等关键词，可找到Logo链接。<blockquote><p>这俩方法下来，几乎绝大多数网站的Logo不在话下</p></blockquote></li></ul></li><li><p>打开命令行<code>cmd</code>快捷方法：</p><p> 直接在文件地址栏输入<code>cmd</code>并敲下<code>Enter</code>即可打开命令行</p></li><li><p>加快<code>git clone</code>下载速度：</p><p> 只需在HTTPS型仓库地址里的<code>github.com</code>后加<code>.cnpmjs.org</code>，下载速度快到你要喊我Daddy。</p></li><li><p>网址导航<strong>美化</strong>代码（内含中文注释）</p><a class="btn-beautify button--animated outline larger" href="https://cdn.jsdelivr.net/gh/hassanblog/navigation/css/custom.css"   title="自定义CSS"><i class="far fa-hand-point-right fa-fw"></i><span>自定义CSS</span></a><a class="btn-beautify button--animated outline larger" href="https://cdn.jsdelivr.net/gh/hassanblog/navigation/js/custom.js"   title="自定义JS"><i class="far fa-hand-point-right fa-fw"></i><span>自定义JS</span></a></li></ol><p>打开<code>[BlogRoot]\themes\webstack\_config.yml</code>填入以下代码即可导入自定义文件：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">custom:</span><br><span class="line">  head: # 以下内容插入到&lt;head&gt;&lt;/head&gt;标签内，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css文件地址&quot;&gt;</span></span><br><span class="line">  body: # 以下内容插入到&lt;/body&gt;标签之前，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;script src=&quot;js文件地址&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="可能有的八阿哥"><a href="#可能有的八阿哥" class="headerlink" title="可能有的八阿哥"></a>可能有的八阿哥</h2><ol><li>网址图片可能会加载不出来</li></ol><p>打开<code>[BlogRoot]\themes\webstack\_config.yml</code>填入以下代码：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">custom:</span><br><span class="line">  head: # 以下内容插入到&lt;head&gt;&lt;/head&gt;标签内，可设置多行，注意每行开头至少四个空格</span><br><span class="line">  body: # 以下内容插入到&lt;/body&gt;标签之前，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;script src=&quot;lozad.min.js文件地址&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><details ><summary> 碎碎念，处理Bug时的心路历程 </summary>              <div class='content'>              <p>其实我自己在没有教程的情况下能搭建成功网址导航，至少对于刚上道的我来说很骄傲自豪的，但谁tm又能想得到，在摸爬滚打的过程中，突然遇到网址图片显示不出来的问题，于是我疯狂百度，也问了很多使用过的博主，都说其他网站可能存在防盗链机制，大致意思是有这个机制的网站，它的图片链接只在自己网站可显示，放其他网站是无法使用的。但当我将所有图片换成我自己仓库的图片时，仍显示不出图片，所以问题不一定出现在图片链接上，也可以说我收藏的那些网站根本没有开防盗链机制。</p><p>于是我花了一周时间找原因，源码对比测试。这一周中，有很多离谱的情况发生，我用<a href="https://dh.xiaokang.me/">小康</a>的源码，图片可以正常显示，但我的就不行，于是我一点一点将他的代码的改成我的，目的是为了找到问题出现在哪一块，但tm就是找不到问题出现的原因。更离谱的是，经过几天的测试后，我放弃了各种推断，再次全部使用小康的源码准备重新找原因的时候，结果连小康图片都不显示了，那为什么我最开始用他的源码就可以？？？就在昨天，我又双叒叕用他的源码再次部署到GitHub上，再将我的<code>index.html</code>代码和小康的对比，终于发现了原因！！！我发现我的<code>index.html</code>最后几行缺少<code>lozad.min.js</code>文件的引入，lozad应该是起图片懒加载的作用，你这就以为我找到了罪魁祸首？真相大白了？我tm寻思<code>[BlogRoot]\themes\webstack\_config.yml</code>文件里明明有将这个js文件导入，为什么最后生成的html文件却没有导入，我此时摸着我凉秃秃的头顶百思不得其姐，现在等于说我已找到了问题和解决方案，只是不知道问题出现的原因，知道原因的小伙伴赶紧留言评论，好让我s心。最后十分感谢并墙裂推荐<a href="https://www.diffchecker.com/">Diffchecker</a>这个贼好用的代码对比网站，不然可能会浪费我更多的时间，毕竟我已经和这个问题杠上了一周，连我所有的学习任务都放弃了！真是心痛我宝贵的寒假时光😭，不过结果是好滴。</p>              </div>            </details><blockquote><p><strong>结尾：</strong></p><p>有什么问题、好的建议、如果链接失效请留言哦~第一次写教程请多多指教阿里嘎多。最后如果本篇对你有帮助，请一键三。。。哦不对，留留言，给个🍭也是可以的。</p></blockquote><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/114195340">GitHub Pages + Hexo免费搭建个人博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/183977963">如何使用多个GitHub Pages</a></li><li><a href="https://blog.csdn.net/u014135752/article/details/79951802">如何将本地项目上传到Github</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 💻教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝博客 </tag>
            
            <tag> 🔹Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思技巧笔记</title>
      <link href="posts/3ce75aa2/"/>
      <url>posts/3ce75aa2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>目标</strong>：</p><table><thead><tr><th>听</th><th>说</th><th>读</th><th>写</th></tr></thead><tbody><tr><td>7.5</td><td>6.5</td><td>7.0</td><td>6.5</td></tr></tbody></table></blockquote><h2 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h2><h3 id="答案书写"><a href="#答案书写" class="headerlink" title="答案书写"></a>答案书写</h3><p><strong>写答案原则：</strong></p><ol><li><p>答案和录音说的一致，所听即所得</p></li><li><p>听重读，一般重读为答案</p></li></ol><p><strong>某些题型答案的写法需注意（推荐写法）：</strong></p><p>3:00-5:00</p><p>10-minute walk</p><p>10-litre water</p><h3 id="精听"><a href="#精听" class="headerlink" title="精听"></a>精听</h3><p><strong>精听跟读目的：</strong></p><ol><li><p>纠正发音</p></li><li><p>理解出题定位</p></li><li><p>理解改写难点</p></li><li><p>不犯相同错误</p></li></ol><p><strong>精听步骤：</strong></p><ol><li><p>听一遍录音，对答案</p></li><li><p>看错题对应原文答案句</p></li><li><p>错题找到定位和答案出处</p></li><li><p>跟读错题答案句</p></li></ol><p><strong>精听跟读：</strong></p><ol><li><p>先做题再精听</p></li><li><p>只精听错题答案处</p></li><li><p>听不出练跟读</p></li></ol><p><strong>通用原则：</strong></p><ol><li><p>rather than后的都不选/写</p></li><li><p>表示<strong>结论性</strong>的词或<strong>转折词</strong>后面是答案（So, However…）</p></li></ol><p><strong>需要首字母大写的词：</strong></p><p>地址，人名，月份，星期，国家等等。</p><h3 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h3><h4 id="主观题"><a href="#主观题" class="headerlink" title="主观题"></a>主观题</h4><ul><li>信息表格题</li><li>填空题</li><li>提纲题</li><li>简答题</li><li>短文填空</li><li>地图题</li><li>流程图题</li></ul><p><strong>填空题（主观）规律：</strong></p><ol><li><p>根据空格前后的词，来预测答案的词性和内容</p></li><li><p>注意原文和题干的同义替换</p></li></ol><h4 id="客观题"><a href="#客观题" class="headerlink" title="客观题"></a>客观题</h4><ul><li>单选</li><li>多选</li><li>搭配题1</li><li>搭配题2</li></ul><p><strong>选择题（客观）规律：</strong></p><ol><li><p>不选反常识的选项</p></li><li><p>速记答案用缩写形式（有时间可以全写）</p></li><li><p>正确的选项通常是对题干的同义替换</p></li></ol><p><strong>雅思A类听力评分标准对照表：</strong></p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/IELTS_Skill_Note/IELTS-ScoringTable.png" alt="雅思A类听力评分标准对照表" style="zoom:120%" /><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p><strong>定位词：</strong></p><p>概念：具有实际意义的词，不抽象</p><p>拒绝猜测和推理，讲究实证，一一对应</p><p>数字和大写字母周围出现考点的概率最大</p><p><strong>判断题</strong>：</p><p>尽量不要简写答案，三种答案数量有规律</p><p>True≥ False &gt; Not Given</p><table><thead><tr><th>总题数</th><th>T、F、N分布</th></tr></thead><tbody><tr><td>3</td><td>1，1，1</td></tr><tr><td>4</td><td>2（T，F），1，1</td></tr><tr><td>5</td><td>2，2，1</td></tr><tr><td>6</td><td>3（T，F），2，1<br>2，2，2</td></tr></tbody></table><p>做题的同时找两个题目的答案</p><p>不要在判断题当中单独使用数字定位</p><p><strong>雅思A类阅读评分标准对照表（同听力）：</strong></p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/IELTS-ScoringTable.png" alt="雅思A类阅读评分标准对照表" style="zoom:120%" /><h2 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h2><p><strong>Part2主题：</strong></p><ul><li>旅游</li><li>人物性格</li><li>课外活动</li><li>餐厅美食</li><li>高科技产品</li><li>衣服类</li></ul><p><strong>Part3答题框架：</strong></p><ol><li><p>what观点</p></li><li><p>why原因</p></li><li><p>details细节</p></li></ol><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>完善中。。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 📕笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦆雅思 </tag>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年度总结&amp;2021新年计划</title>
      <link href="posts/d5180487/"/>
      <url>posts/d5180487/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>背景：</strong></p><p>2020年初的时候看<a href="https://www.bilibili.com/video/BV1vJ411L7NA">ycr哥哥</a>的视频，萌生了写年度计划的想法，于是乎就行动了，第一次接触Xmind软件不得不说炒鸡好用，UI做的很有简约之美。制定2020Target的时候距离现在也差不多一年了，得做做年终总结和写写新年计划了！</p></blockquote><div class='poem'><div class='poem-title'>元日</div><div class='poem-author'>[宋] 王安石</div><p>爆竹声中一岁除，<br>春风送暖入屠苏。<br>千门万户曈曈日，<br>总把新桃换旧符。</p></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">诗词有字显示有误？  </button><span class="hide-content">千门万户曈曈日（“曈”是罕见字，一般的“艺术”字体显示有误，如果你这显示有误，可能是网页没有完全加载完毕，它用的是原始字体，以至于我预设的字体没加载出来，在刷新完毕之前先看看本篇博客叭~）</span></span><h2 id="🐭回顾2020"><a href="#🐭回顾2020" class="headerlink" title="🐭回顾2020"></a>🐭回顾2020</h2><p>2020真是多灾多难、光怪陆离的一年。20年一月初的我，满怀信心的写下了新年计划，之后便目睹了一连串的热搜新闻席卷而来，先是疫情爆发，二是科比坠机逝世等爆点新闻，2020的开场白实在是不堪入目，为整个2020奠定了不详的基调，好在国家的强大，几个月内就基本控制住了疫情，接下来的热搜新闻就是国外各种各样刷新三观的疫情相关操作，川建国同志最为代表人物，承包了我一年的笑点与恨点，近几周，新闻宣称拜振华同志当选为美国总统，我直接好家伙😂。至于我呢，一整年下来，有进步的地方，也有做的不到位的地方，所以接下来分析分析、总结总结。之前原本想拍个总结视频水下B站，毕竟我这不是一年多没有发视频了吗？现在我还不是特别自信，也没预先准备好，最后发了也没人看，羞，决定今年就不拍了，用博客记录也挺好。我觉得以后留学、工作有时间做做兼职UP主也是挺好的，我拍摄剪辑技术可不能白白浪费🤦‍。So, let’s get started!</p><p>根据2020Target各大板块逐步分析总结：</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/2020Summary&2021Target/2020Target.png" alt="2020Target"></p><p>去年总共写了8大板块——”<strong>健康</strong>“、”<strong>学习</strong>“、“<strong>活动</strong>”、“<strong>收入</strong>”、“<strong>情感</strong>”、”<strong>外延与内涵</strong>“、“<strong>视频</strong>”和“<strong>音乐</strong>”。</p><h3 id="💪健康"><a href="#💪健康" class="headerlink" title="💪健康"></a>💪健康</h3><p>首先谈谈第一个板块<strong>健康</strong>。大概是每天要健健身，包括仰卧起坐和举哑铃，乍一看安排的还不戳，如果能够顺利执行，现在肌肉应该粗了一圈吧？😟这不好笑，喜欢健身的朋友们<del>可能</del>肯定会觉得我这个健身计划没卵用，那为什么我还执意去写呢？因为自己没有花时间去研究合适的锻炼方式，当然计划还是要有的，只是执行力得跟上，现在重心还是过多的放在了学习和爱好上，有时候容易忽视自己的身体健康。2020上半年在家的时候我还是有刻意的去锻炼，家里买了2个瑜伽垫，目的肯定不是练瑜伽😂，而是做做仰卧起坐、平板支撑和俯卧撑之类的，我练的很随性，没有特别规律，下半年到学校后，每天基本上与健身无缘，几乎天天泡在图书馆，<del>摸鱼</del>。所以，新的一年得继续执行健身计划，从小做起，一点点加大力度。然后是营养方面，每天喝充足的水，每餐要多吃。水的话，在家里喝的少，我家里人不喜欢用饮水机，得自己去院子里打饮用水，然后回来还要再烧开一下，我们家这是何苦呢？每次喝个水特麻烦🙂，于是无形之中水就喝的少一些，当然了，懒是原罪，我无话可说。。<del>一万个好家伙飞过来</del>，在学校我的每日水量还是挺正常，想喝水随时随地打。然后，2020计划有提到每餐要多吃，是因为我偏瘦型身材，原本是希望从140斤涨到155，而现在是145，其实有一段时间到过150，害，算是小有进步🙃。最后，睡觉方面，原本希望自己早睡早起，但结果天天翻车，不过在学校情况良好，一回家就乱了套🙃，心口在滴血。</p><h3 id="✍学习"><a href="#✍学习" class="headerlink" title="✍学习"></a>✍学习</h3><p>第二大板块<strong>学习</strong>，英语方面，六级第一次考了没过，第二次感觉做的比第一次好，但是对完答案，还是感觉小命难保，<del>skr</del>（目前没出分，2月出），我这是何苦呢？费很多时间去准备结果就这，真该听哥哥姐姐的建议，先准备雅思，两者并不冲突。然后词汇量方面，近几周测了几次，差不多有个8000，口语方面，记得年初脑子一热，看了北外的口语网课，掌握了一点点知识吧，当然还不够系统，其实不如直接准备雅思，你说这是何苦呢？🙃属实浪费时间。然后该谈谈我将来的饭碗 - 计算机，计划写着掌握算法、Java、Python，说实话，感觉一直没入门，本人比较浮躁，沉不下心来学习钻研，然后我学的东西比较杂，不成体统，当然还得靠自己慢慢来吧。成绩方面，我本学期还行，应该能达到目标，但是水课成绩普遍比学位课高，到最后绩点还是得看学位课，我大一下和大二上的成绩给我拖了很多后腿，总体绩点想提上来的确很难，得加把劲咯，为了Family，更为了至己。当然咯，绩点其实不重要，学到真材实料才是真，但留学还是要看绩点的鸭🙃。。自控方面，每周有坚持写总结，除了偶尔几周，当然这不重要，重要的是每周的自己不一样，<del>我这口气好像做传销的bushi</del>，对自己狠一点，拒绝拖延和提高效率还有待加强，<del>大佬莫笑</del>。证书方面，驾照一月初就拿了，四级也过了，六级观望中，蓝桥杯省一，软考没有报名，<del>嫌自己太菜</del>，在老师的带领下，还拿了证券投资模拟大赛国二，算是在金融领域沾了个边，从一开始的梭哈，到如今的智慧投资，算是懂了点皮毛，但现实生活中投资需谨慎😂。现在回顾以往，其实我追求的这些证书轻如鸿毛，只是学习过程中顺手牵的羊，该拿的还是得拿，学到真功夫才是真。技能方面，上半年在小姨家学过烘焙，一下午时间就做了肉松海苔小贝、红豆蛋挞两个甜点 - 真滴很好吃，这也不算是掌握了烘焙这门技能，只是上手很容易，还是在小姨的耐心指导下完成的，学完就忘了一半，以后自己在外独立生活，这些烘焙技术得学会！除了烘焙技能，还有搭建博客，<del>这也不算是技能</del>，您现在所看到的博客网站是我按照教程一点点搭建出来的，DIY了数月，算是掌握了吧，<del>大佬轻喷</del>，没有掌握的技能有建站和烹饪，在此说明下建站和搭建博客网站不太一样（博客框架是大佬开发的，我的工作只是使用此框架来上传博客和自定义美化它，相对于建站要简单很多）。2021再接再厉，<del>大佬轻喷Orz</del>。。</p><h3 id="🎈活动"><a href="#🎈活动" class="headerlink" title="🎈活动"></a>🎈活动</h3><p>第三大板块<strong>活动</strong>，写这一板块的目的是希望能够拿更多的学分吧，谁还不是学分狗呢？<del>好像只有我</del>🙃。现在即将大三下了，一些扯淡的活动直接甩到九霄云外，不值得，不如多参加竞赛，提升自己学科能力。</p><h3 id="💴收入"><a href="#💴收入" class="headerlink" title="💴收入"></a>💴收入</h3><p>第四大板块<strong>收入</strong>，下半年拿了三等奖学金，说实话不得不感慨班上大佬太多了，本以为自己的综测分很高，结果发现还有更高的，还高的离谱，这还是人吗？当然了，还是得说一句，综测分不重要，学到真本事才是真。年初的时候，给熟人家孩子补过习，赚了一点mula，emmm海星，<del>大佬莫笑</del>。大学这个阶段本人认为，收入是次要的，以后出来混，<del>混出来了</del>，月薪可抵大学4年赚的，<del>传统功夫点到为止。</del></p><h3 id="💜情感"><a href="#💜情感" class="headerlink" title="💜情感"></a>💜情感</h3><p>第五大板块<strong>情感</strong>，小脸突然一红😳，有点羞耻，世上哪有什么Ms. Right，俺只配活在梦境里（苦笑.jpg）。一本正经地说，谈恋爱不应该成为目标，不能为了谈而谈，这个东西还得随缘，是对她未来的负责也是对自己未来的负责。To be honest，其实我已降低了无数门槛与标准，但难以找到自己十分钟意的，可能井底蛙本蛙得出去看看大世界了，当然，我自身肯定有一些不足之处，比如不主动，双商堪忧等等，有时候我又把不主动归结于自己没有十分的满意，其实，不断提高充实自己才能找到better one，这点永不过时。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">点击查看广告  </button><span class="hide-content">（关注我公众号可以通过聊天问出我相关问题的回答，能否触发我后台预设的问题，看你自己怎么问哦hh，注意用第二人称）</span></span></p><h3 id="😀外延与内涵"><a href="#😀外延与内涵" class="headerlink" title="😀外延与内涵"></a>😀外延与内涵</h3><p>第六大板块<strong>外延与内涵</strong>，外延方面，希望能干干净净，彬彬有礼，不吐芬芳，<del>这是什么奇怪的人设</del>。其实在家时我比较邋遢和随意，在校时也没有以往那么爱“打扮”，可能是心累了，心思不在穿着打扮上，以前可能觉得整得摔摔七七的很有魅力，现在淡然了许多，我只不过是芸芸众生中普通的那一位，你最多只能当自己心目中的Superstar。话说回来，这些自我要求还是得执行，让自己感到舒服快乐才是最好的。再来谈谈内涵方面，我心态一直以来比较积极向上阳光开朗，可能有时候容易被失败给绊倒然后质疑自己的能力，处于低迷状态，不过这种事情最后还是烟消云散。“求知若饥，虚心若愚”，这是Steve·Jobs的名言，在这一年中，我过于保持饥饿以至于东学西学，到了最后捡了芝麻丢了西瓜，成了个傻瓜，<del>skr</del>，计算机知识实在是太广了，所以得专攻一个自己喜欢的part。</p><h3 id="📹视频"><a href="#📹视频" class="headerlink" title="📹视频"></a>📹视频</h3><p>第七大板块<strong>视频</strong>，原本是想继续学习拍摄剪辑技巧，但2020上半年由于疫情在家，学生会没有拍摄剪辑的任务，于是我这个部长就只当了半学期，所以这一整年除了纸婚祝福视频好像就没有其它剪辑项目，更别说上传B站了，现在想想还真得感谢那76个”粉丝“到现在还在关注我，真是泪目了Orz。2021年我也不太打算做视频，虽说To Do List写了一些视频计划，但我现阶段难以执行，看暑假有没有什么机会出去玩玩？这么一说好几年没有正儿八经的旅游了，说实话旅游Vlog也没啥人看，除非自己有人气，但当当自己生活的记录也挺好，万一哪天意外走红？<del>异想天开</del>，还是现在踏踏实实地做好一个普通而不平凡的人叭。</p><h3 id="🎵音乐"><a href="#🎵音乐" class="headerlink" title="🎵音乐"></a>🎵音乐</h3><p>第八大版块<strong>音乐</strong>，钢琴这一块现在也记不太清自己学了几首歌，其实学到的曲子数量并不重要，开心就好。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">题外话  </button><span class="hide-content">（我的钢琴入门是我哥教的，在学校时我经常会看B站上的零基础视频，放假到家时会捣鼓捣鼓电子琴，说实话，没有专业要求的话钢琴入门真的super简单，只要会点和弦伴奏技巧和有~~亿~~一点点天赋，你能给市面上大多数流行音乐伴奏和演奏，其实不太需要看谱子，当然学习速度和效果还是因人而异吧，至于我，小时候就很喜欢音乐，对音乐各个层次领域的东西都有着持续关注和细微观察，以至于到了大学有充足时间后就疯了似的追求音乐方面的爱好，学琴的速度自然就快一些。好像通过我这一个行为，能悟出一个道理，要想在某一领域出类拔萃，你先得培养你的爱好，平时多思考，学前还得有相关知识的预习hh。像我正儿八经学习钢琴之前，就尝试过分析别人是怎么弹的，会考虑到一首歌的层次结构。其实我小的时候家里就买过电子琴，由于没有人教，就自己一根小指头点来点去，令我印象深刻的是，我当时一根手指弹了汶川大地震时经常放的歌《让世界充满爱》，这一切的一切使我在2年前那个夏天，SkyBro的指导下，半小时内学会了双手合奏《小星星》，我这学习速度令自己都震惊不已，~~低调低调~~，记得前几周我看了刘谦3周自学钢琴的B站视频（BV1Wt4y1r7km），评论区很多网友皆表示不可思议太厉害了，我心想真的没有你们想的那么难😂，可能外行人看门道内行人看笑话吧。其实我学琴前还一直不能理解，一个人的大脑是如何做到让两只手弹不同的音，But now，I've got it and made it!!! 如果有机会有心情，我可能会写我是如何快速上手钢琴的博客，没人看的话就当做自己的记录叭（这是在提前给自己挖坑？hh））</span></span>。然后，谈谈嘻哈这一块，我本人最喜欢的音乐风格是说唱，大概是从17年《有嘻哈》开始，在那之前有接触过嘻哈文化，当时只是觉得很酷但不知道那叫嘻哈（嘻哈四大板块：滑板、涂鸦、说唱、街舞），当然我这里只谈说唱，2020年的计划是创作2首歌，但我只写了部分歌词（多个主题的），直到近几周我才考虑制作和发歌的问题，当然发歌只是为了好玩，愉悦自己，若能得到他人的赞美和共情也是我愿意看到的。制作方面的问题，目前也没有时间、金钱、经历和精力去学习正规流程的制作，我现在只能利用库乐队和AU来制作，其实库乐队和AU对于小白来说够了，库乐队甚至能使用Auto-Tune插件，记得当时买到插件的那一刻激动s我了，你能想象一个大男人对着iPad傻叫，然后监听自己加了AT效果的声音，最后边笑边听到自己实时电音效果的笑声后笑的愈演愈烈的场景吗？也许每个喜欢用AT的音乐人第一次使用它的场景跟我一样吧？可能只有我一个人私下的reaction太浮夸了。。最后，年初之时我还想着提高自己的freestyle的能力，可能有些人会问学这有啥用？你这是要参加《新说唱x》《青你x》《创x》么？Nah！Not at all！只是为了愉悦自己，其实有时候在好友面前随便free几句还是蛮好玩，能活跃气氛。所以，为了提高freestyle能力，我有段时间专门看爆音（我称之为“中国即兴说唱之父”）直播的录播视频，深深佩服于他脑袋瓜的灵活、思维的转换能力、内容素材的丰富和押韵技巧的高超，总之学到了很多技巧和知识。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">🎵 新歌预告  </button><span class="hide-content">（如果两大平台审核能通过并且不出什么意外的话，2.14号会发首R&B（节奏布鲁斯风格）情歌，寒假结束前会发首Melodic Trap（旋律陷阱音乐））</span></span></p><p>以上就是我对2020的总结。</p><h2 id="🐮展望2021"><a href="#🐮展望2021" class="headerlink" title="🐮展望2021"></a>🐮展望2021</h2><p>今年的计划与上一年有些许不同，简单说说大致不同和对自己的憧憬吧！</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/2020Summary&2021Target/2021Target.png" alt="2021Target"></p><p>从板块上来说，<strong>健康</strong>板块增加了俯卧撑，虽然去年没有加，但实际上我有在执行这一项，请忽略我的完美主义（🦁座还有这？）。<strong>学习</strong>板块，英语这里我计划是2021年和雅思菇凉分手，啊这，这不才谈了几天，就考虑分手的事情吗？对！I should find a new one! 然后词汇量破10,000，这应该是雅思前任们的标配吧？maybe。然后计算机重点是学会建站，我可能和建站杠上了，因为两学期了，还是不会，之前老师教的时候，没怎么听，于是乎。。成绩方面稍微提高了目标分数，当然重点还是学习过程鸭，学到真本领才是真，鸭梨不要太大。自控方面添加了时间管理，<del>可能是受了亚洲舞王事件的影响</del>，但讲道理时间管理确实很重要，人的一生也就活个30,000天左右，没有多少时间给你去挥霍（wait! 我在写鸡汤吗？？）。再就是证书，增加了雅思、蓝桥杯和计算机四级。技能方面增加了绘画，毕竟去年氪金了 iPad Pro 2020 和 Apple Pencil Ⅱ，不整点活儿？当然有时间精力的话会学的，毕竟自己也有部分这方面的爱好，有时候爱好多了也不是件好事🤔，所以时间管理很重要，适当分配时间陶怡情操。<strong>收入</strong>板块，尽量一等奖，赚钱也不强求，计算机学好了是不屑于学生时代赚的mula。<strong>外延与内涵</strong>板块，增加了提高双商和干就完了别想太多两点，与其说是新年计划不如说是我对自己的要求，这应该是伴随自己一辈子的自我要求。<strong>视频</strong>板块删除很多地方，人的经历有限，只留下了拍照片、学习拍摄技巧和收藏剪辑素材这三大计划，至少2021年执行性很高。<strong>音乐</strong>板块，钢琴是还会继续学习的，嘻哈创作也会继续，<del>除非某一天江郎才尽</del>。</p><p>从思维导图整体上来说，一些图标、样式和英语表达有细微修改，布局有改变，取消了<strong>活动</strong>和<strong>情感</strong>两大板块，一是大三大四了，参与活动什么的不重要了，二是情感不能成为目标，要为自己未来人生深思熟虑，绝不能意气用事。</p><p>以上就是我对2021的展望，写了一下午的时间外加零碎时间的修改。Keep Moving!</p><blockquote><p><strong>结束语</strong>：</p><p>洋洋洒洒五千字，当做自己2020~2021人生轨迹的一个记录吧，期待一年后崭新的自己。<br>“苟日新，日日新，又日新”——《礼记·大学》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 🤔随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎯计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="posts/d95d7e09/"/>
      <url>posts/d95d7e09/</url>
      
        <content type="html"><![CDATA[<h3 id="心中之🔥再次燃起"><a href="#心中之🔥再次燃起" class="headerlink" title="心中之🔥再次燃起"></a>心中之🔥再次燃起</h3><p>今天是2020-11-22，我决定开始写我人生中真正意义上的第一篇博客。说到博客，对我来说一直都是件很头疼的事情。第一次正儿八经地听说博客这个东西，是19年10月份的一个学院小讲堂上，当时主讲人夏学长教我们如何搭建博客、更改主题等等知识，最后确实搭建成功了，开始还很欣喜，但觉着搭建博客是件非常麻烦耗时的事情，加上自己也是小白，没经验更没时间捣鼓，于是就放弃了一段时间。就在今年的2月份，我突然改变主意，感觉用CSDN写博客是个不错的选择，说实话它的使用感非常方便，毕竟别人什么都给你做了，你只需要上传你的博客即可，各大引擎都能搜索到你的文章，不用费劲等待各大引擎爸爸的收录，当然除了我那几天上传的2个博客以外，就再也没有上传过了，心有余而力不足，懒癌晚期😤。直到近几天，学校的课程实在是学不进去，我突然心血来潮，就又开始花时间钻研捣鼓，惊讶的是很快就上手了，比如改主题，发博客，网站的美化和魔改等等都容易许多，可能随着自己知识的增加，有些之前遇到的难题就迎刃而解了。当前，我把网站主题yilia更改为butterfly了，记得我在官网找主题花了很久时间，里面一百来个主题反反复复看都没有钟意的😂，最后还是搜索找到了这个”风靡全网“的主题，非常符合自己的审美。以后有空的话，我会一点点完善和美化本博客。</p><h3 id="博客里会有哪些内容？"><a href="#博客里会有哪些内容？" class="headerlink" title="博客里会有哪些内容？"></a>博客里会有哪些内容？</h3><p>Whatever I want! 但主要还是计算机相关学习内容，记一下自己的学习笔记，码一些我觉得有用的干货，如果能顺便帮到大伙，真的是无心插柳柳成荫，这是我愿意看到的！</p>]]></content>
      
      
      <categories>
          
          <category> 🤔随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于我 - About Me</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h1><p>昵称：Hassan川枫</p><p>英文名：Hassan Wong</p><p>性别：♂</p><p>破壳：千禧年</p><p>坐标：湖北</p><p>本科：三峡大学</p><p>爱好：唱歌，街舞，说唱，打篮球，剪辑，摄影。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="manifest.json"/>
      <url>manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"string","short_name":"Junzhou","theme_color":"#81D8CF","background_color":"#81D8CF","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"images/pwaicons/36.png","sizes":"36x36","type":"image/png"},{"src":"images/pwaicons/48.png","sizes":"48x48","type":"image/png"},{"src":"images/pwaicons/72.png","sizes":"72x72","type":"image/png"},{"src":"images/pwaicons/96.png","sizes":"96x96","type":"image/png"},{"src":"images/pwaicons/144.png","sizes":"144x144","type":"image/png"},{"src":"images/pwaicons/192.png","sizes":"192x192","type":"image/png"},{"src":"images/pwaicons/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类 - Categories</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板 - Comments</title>
      <link href="comments/index.html"/>
      <url>comments/index.html</url>
      
        <content type="html"><![CDATA[  <div id="computer">    <div id="maincontent"><br>      <div id="form-wrap"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png" id="beforeimg">        <div id="envelope">          <form>            <div class="formmain">              <img class="headerimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/WendyZhang.gif"/>              <div style="padding: 5px 20px;">                <center>                  <h3 calss="title3">来自Hassan Wong的留言:</h3>                </center>                <center class="comments">                  有什么想问的？<br>                  有什么建议的？<br>                  有什么想吐槽的？<br>                  有什么好玩的HTML、CSS、JS，都可以介绍给我哦~<br>                </center>                <div class="bottomcontent">                <img class="bottomimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png"/>                </div>                <p class="bottomhr">Hassan Wong竭诚为您服务！</p>              </div>            </div>          </form>        </div><img id="afterimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png">      </div>    </div>  </div>  <div id="mobile">    <form>      <div class="formmain"><img class="headerimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/WendyZhang.gif" />        <div style="padding: 5px 20px;">          <center>            <h3 class="title3">来自Hassan Wong的留言:</h3>          </center>          <center class="comments">            有什么想问的？<br>               有什么建议的？<br>            有什么想吐槽的？<br>            有什么好玩的HTML、CSS、JS，都可以介绍给我哦~<br>          </center>          <div class="bottomcontent"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/hassan/loading.gif" data-lazy-src="https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png" class="bottomhr"></div>          <p class="bottomhr"">Hassan Wong竭诚为您服务！</p>        </div>      </div>    </form>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="hassan/hassan.css"/>
      <url>hassan/hassan.css</url>
      
        <content type="html"><![CDATA[/* 修改图标颜色、大小 */.fa-github:before {  content: "\f09b";  /* 修改颜色 */  color: #4eabe9;}.fa-envelope:before {  content: "\f0e0";  /* 修改颜色 */  color: #ecc849;}.fa-weibo:before {  content: "\f18a";  /* 修改颜色 */  color: #e32428;}.icon-bilibili:before {  content: "\e647";  /* 修改颜色 */  color: #00a5dc;  /* 修改大小 */  font-size: 20px;}.icon-quanminkge:before {  content: "\e970";  /* 修改颜色 */  color: #f05549;  /* 修改大小 */  font-size: 20px;}.icon-earth:before {  content: "\e62e";  /* 修改大小 */  font-size: 20px;}/*移动端优化：去除归档、标签、最新文章、公告、网站统计（:not(:last-child)）*/@media screen and (max-width: 800px) {  #aside_content div {    display: none;    font-size: 13px;  }}/* 鼠标图标 -----------------------------------------------------------------------开始 */body {  cursor: url(https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cursor.png),    default !important;}/*a标签，按钮，头部的导航栏*/a:hover,button:hover,#nav .site-page:hover {  cursor: url(https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cursor_puppy.png),    pointer !important;}/*i标签，分页器*/i:hover,#pagination .page-number:hover {  cursor: url(https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cursor_stitch.png),    pointer !important;}/*页脚a标签*/#footer-wrap a:hover {  text-decoration: none;  cursor: url(https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cursor_stitch.png),    pointer !important;}/* 鼠标图标 -----------------------------------------------------------------------结束 */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>朋友圈 - Hassan&#39;s Circle</title>
      <link href="friendcircle/index.html"/>
      <url>friendcircle/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="hassan/hassan.js"/>
      <url>hassan/hassan.js</url>
      
        <content type="html"><![CDATA[// 卖萌标题var OriginTitle = document.title;var titleTime;document.addEventListener('visibilitychange', function () {    if (document.hidden) {        $('[rel="icon"]').attr('href', "/img/favicon.ico");        document.title = '(つェ⊂) 感觉你怪怪的~~';        clearTimeout(titleTime);    } else {        $('[rel="icon"]').attr('href', "/img/favicon.ico");        document.title = '(*´∇｀*) 怪可爱的~~  ' + OriginTitle;        titleTime = setTimeout(function () {            document.title = OriginTitle;        }, 2000);    }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链 - Links</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="我的友链"><a href="#我的友链" class="headerlink" title="我的友链"></a>我的友链</h2><p>来互加友链鸭~</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hassan&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">link:</span> <span class="string">https://hassanwong.top</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/avatar_blog.jpg</span></span><br><span class="line"><span class="attr">descr:</span> <span class="string">时不我待，只争朝夕</span></span><br><span class="line"><span class="attr">siteshot:</span> <span class="string">https://cdn.jsdelivr.net/gh/hassanblog/ScreenShot@gh-pages/hassanblog.github.io.jpg</span></span><br></pre></td></tr></table></figure><blockquote><p>若贵站友链显示方式不是flexcard，或无需网站截图，则可以将<code>siteshot</code>这一参数省略</p></blockquote><h2 id="本站添加友链方式"><a href="#本站添加友链方式" class="headerlink" title="本站添加友链方式"></a>本站添加友链方式</h2><p>参照以下格式<strong>留言</strong>即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span>      <span class="comment">#站点名称</span></span><br><span class="line"><span class="attr">link:</span>         <span class="comment">#站点网址</span></span><br><span class="line"><span class="attr">avatar:</span>     <span class="comment">#头像链接</span></span><br><span class="line"><span class="attr">descr:</span>      <span class="comment">#站点描述（字数不要太多）</span></span><br><span class="line"><span class="attr">siteshot:</span>  <span class="comment">#截图链接（可省略）</span></span><br></pre></td></tr></table></figure><blockquote><p>参数记得要与冒号空一格</p></blockquote><h4 id="站点截图方式-siteshot"><a href="#站点截图方式-siteshot" class="headerlink" title="站点截图方式 - siteshot"></a>站点截图方式 - siteshot</h4><p>建议使用 thum.io 提供的 API 以获取贵站的截图</p><p>方法一：先访问以下链接获取API提供的截图，再将图片上传至你的图床，最后将链接填入siteshot。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;image.thum.io&#x2F;get&#x2F;width&#x2F;400&#x2F;crop&#x2F;800&#x2F;allowJPG&#x2F;wait&#x2F;20&#x2F;noanimate&#x2F;https:&#x2F;&#x2F;[你的域名]&#x2F;</span><br></pre></td></tr></table></figure><p>方法二：自行截图或用其它能代表贵站的图片，再将链接填入siteshot。（要求：400✖266像素 或 长宽比例1.5）</p><p>方法三：直接省略（API会自动截图，虽说API目前相当稳定，但本站不能保证以后也稳定）</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>更新日志 - Update Log</title>
      <link href="log/index.html"/>
      <url>log/index.html</url>
      
        <content type="html"><![CDATA[<div class="timeline"><p class='p h2'>更新日志</p><div class="timenode"><div class="meta"><p><p>2021-3-16</p></p></div><div class="body"><ul><li>重新在导航栏添加“留言板”</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-15</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/3b78b69a/">修复“统计图表”pjax适配Bug</a>（直接在md文件里加<code>&lt;div class=&quot;js-pjax&quot;&gt;</code>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-14</p></p></div><div class="body"><ul><li><a href="https://nexmoe.hclonely.com/posts/57bd67ce/">增加“统计图表”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-13</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/f752c86d/">使用 Github Action 实现全自动部署</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-12</p></p></div><div class="body"><ul><li><a href="https://blog.csdn.net/sunshine940326/article/details/70936988">让百度收录网址导航</a></li><li>增大文章、目录宽度</li><li>gitcalendar颜色调整（0次提交对应颜色：rgb(226, 228, 233, 0.6)）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-11</p></p></div><div class="body"><ul><li>更换标题、水平分割线图标</li><li>增加鼠标点击效果</li><li><a href="https://zhidao.baidu.com/question/211395978.html">给公告栏加滚动条</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-9</p></p></div><div class="body"><ul><li>更换网站背景图案</li><li>停掉彩色丝带效果</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-9</p></p></div><div class="body"><ul><li>更换加载loading图案</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-28</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/abab51cf/">给博客和网址导航添加wow动画特效</a></li><li><a href="https://blog.keepdai.cn/Twikoofanwai.html">Twikoo评论框高度</a>（188px）</li><li><a href="http://noionion.top/4712.html">Twikoo更换表情包</a></li><li>修改表情包框宽高（727px，216px）</li><li><a href="https://akilar.top/posts/23fdf850/">页脚振翅蝴蝶动效</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-24</p></p></div><div class="body"><ul><li>升级Butterfly主题3.6.2（进度100%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-23</p></p></div><div class="body"><ul><li>升级Butterfly主题3.6.2（进度20%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-22</p></p></div><div class="body"><ul><li>增加<a href="https://www.revolvermaps.com/">访客地球</a>组件</li><li>组件页面增加<a href="https://www.wangt.cc/2021/02/css%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C/">毛玻璃效果</a></li><li>美化网址导航</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-21</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的Bug（进度100%）</li><li>链接按钮、数字图标、代码框样式微改</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-20</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的Bug（进度70%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-19</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的Bug（将小康导航网站源码和webstack官网的结合使用，进度50%）</li><li><a href="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/404.png">更改404图片</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-18</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的Bug（进度10%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-17</p></p></div><div class="body"><ul><li>美化网址导航</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-16</p></p></div><div class="body"><ul><li>美化网址导航</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-15</p></p></div><div class="body"><ul><li>搭建网址导航（进度100%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-14</p></p></div><div class="body"><ul><li>删除coding静态页面，取消coding所有域名解析，仍保持代码部署</li><li>朋友圈pjax适配（删除冰老师前端教程所有提到的操作，直接按照aki的前端教程）</li><li>添加网址导航（进度20%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-13</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/8480b91c/">添加朋友圈 - 前端（外加美化）</a></li><li>添加网址导航（进度10%）</li><li>添加评论回邮漫画风格模板</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-12</p></p></div><div class="body"><ul><li><a href="https://zfe.space/post/friend-link-circle.html">添加朋友圈 - 后端</a></li><li>添加网址导航（进度5%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-10</p></p></div><div class="body"><ul><li>修改表格滚动条显隐逻辑和标题居左显示，外加美化（overflow-x: auto，text-align: left）</li><li>搜索栏、最新文章图片显示圆角化</li><li>图片底部标题文字与图片的距离（margin-top: 0）</li><li>板块顶部图调深</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-9</p></p></div><div class="body"><ul><li><a href="https://www.nesxc.com/post/hexocc.html">文章版权样式美化</a></li><li>更新“公告”组件</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-7</p></p></div><div class="body"><ul><li><a href="https://www.nesxc.com/post/hexocc.html">文章版权样式魔改</a></li><li>将部分直角框圆角化</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-6</p></p></div><div class="body"><ul><li>更换域名为<a href="hassanwong.top">hassanwong.top</a></li><li><a href="https://blog.csdn.net/lxb_wyf/article/details/109137006">利用Hexo-abbrlink插件给文章生成唯一链接</a></li><li>修复打赏Trick or Treat按钮hover颜色不全的Bug</li><li>将部分button框圆角化并带有阴影</li><li>让百度收录本博客  <a href="https://zhuanlan.zhihu.com/p/111773896">参考链接1-知乎</a>   <a href="https://blog.csdn.net/sunshine940326/article/details/70936988">参考链接2-CSDN</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-5</p></p></div><div class="body"><ul><li>修复最新评论Bug（只能使用一个评论系统）====</li><li><a href="https://akilar.top/posts/969dffe3/">Hexo 博客静态资源加速</a></li><li>GitHub+Coding+Vercel的三线部署 <a href="https://www.heson10.com/posts/54971.html">参考教程1-Coding</a>   <a href="https://www.heson10.com/posts/38770.html">参考教程2-Vercel</a></li><li><a href="https://akilar.gitee.io/posts/e87ad7f8/">增添网站底层徽标</a>（Coding+Vercel）</li><li>跟随时间自动切换深浅模式（autoChangeMode: 2）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-4</p></p></div><div class="body"><ul><li>修改gitcalendar提交次数对应的颜色逻辑判断（gitcalendar.pug、gitcalendar-js.pug）</li><li>自定义gitcalendar色阶（类似温度色阶 - 冷色系），以及Less-More显示</li><li><a href="https://akilar.top/posts/57291286/">siteshot 配置项留空的情况下，使用 thum.io 提供的 API 自动截图。</a></li><li>大幅修改custom.css文件（突然发现_config.yml里面有全局字体配置😭）</li><li>增加鼠标点击特效（🍁🌸）</li><li>更改部分板块图标ICON</li><li>增加“文章”导航栏，将“时光机”、“标签”和“分类”放进来</li><li>更换Valine为<a href="https://twikoo.js.org/">Twikoo</a>评论系统</li><li><a href="https://akilar.top/posts/1f9c68c9/">修复gitcalendar不显示Bug</a>（自建API）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-3</p></p></div><div class="body"><ul><li>更换图片地址</li><li>修改“音乐”板块文字说明</li><li>修改“时光机”板块banner图（哆啦A梦）</li><li>修改“友链”板块banner图（哈利波特赫敏罗恩）</li><li>修改“音乐”板块banner图（初音未来）</li><li>设置自动播放音乐</li><li>“清单”板块改名为“娱乐”</li><li>在”关于我”板块添加内容</li><li>在“友链”板块增加互加友链的说明</li><li>设置Valine评论邮件提醒  <a href="https://blog.csdn.net/qq_45428737/article/details/105574603">参考教程1-阳光派plus</a>  <a href="https://www.antmoe.com/posts/2380732b/index.html">参考教程2-小康</a></li><li><a href="https://akilar.top/posts/d2222705/">Valine评论添加[博主,小伙伴,访客]标签</a></li><li>更改代码块文字大小（16px）</li><li>更改网站主字体（PingFang SC）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-2</p></p></div><div class="body"><ul><li>修改文章中错别字以及表达不当的地方</li><li>修复已失效的友链，并添加新的</li><li>隐藏内容hide-content和加粗bold分别按照深浅模式来配置颜色（原色基础上加深/变浅）</li><li><a href="https://akilar.top/posts/57291286/">友链魔改</a>（flexcard弹性卡片样式）</li><li><a href="https://akilar.top/posts/23fdf850/">使左上角站点标题跟随文章标题变化</a></li><li>将Gitee图床转为GitHub+JsDeliver图床</li><li>更改中上方弹框字体和导航栏“娱乐”栏字体大小（Candy，18px）</li><li>友链卡片透明度和字体（0.55，Candy）</li><li>添加网站座右铭（宝剑锋从磨砺出，梅花香自苦寒来）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-1</p></p></div><div class="body"><ul><li>修复gitcalendar的页面切换回来不显示的Bug（原因是aditional-js.pug文件要添加的代码没有放在.js-pjax下面）</li><li>更改诗词标签字体（毛笔行书字体）</li><li>调整部分地方的字体</li><li>“网站资讯”小组件标题改成“网站数据”</li><li><a href="http://www.360doc.com/content/19/1018/22/11350070_867703931.shtml">调整文章字间距</a>（1px）</li><li>更改链接颜色（蒂芙尼蓝）</li><li>隐藏内容hide-content加背景颜色（#b4b4b4），以区分</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">修改白天模式、深色模式和阅读模式</a></li><li>加深滚动条背景区域颜色（#888888）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-31</p></p></div><div class="body"><ul><li>更改网站主题颜色（蒂芙尼蓝#81D8CF）</li><li>自定义gitcalendar板块色阶（蒂芙尼蓝由浅入深）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-30</p></p></div><div class="body"><ul><li>更改字体加粗效果（去掉bold改为<strong>橘粉色</strong>高光）</li><li>网页右侧button圆角化</li><li>“音乐“板块更名为”音乐播放器“，并附上功能简介。</li><li>”电影“、”照片“板块加上”待开发“后缀。</li><li>给导航栏各个板块的页面标题加英文后缀</li><li>给”更新日志“板块<a href="https://akilar.top/posts/615e2dec/">添加时间轴timeline外挂标签</a></li><li><a href="https://akilar.top/posts/1f9c68c9/">增加网站首页置顶gitcalendar板块</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-28</p></p></div><div class="body"><ul><li>取消<a href="https://butterfly.js.org/posts/ea33ab97/#%E4%BE%8B%E5%AD%90">全球访客</a>小组件</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">更改网页字体</a>（甜甜圈海报Candy，OldEnglish）</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">隐藏 Aplayer 的全局吸底音乐标签</a></li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">修改文章透明度</a>（0.9）</li><li>更改字体大小（标题，文章，小组件，导航栏等等）</li><li>加深滚动条背景区域颜色（#a8a8a8）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-25</p></p></div><div class="body"><ul><li><a href="https://akilar.gitee.io/posts/e87ad7f8/">添加网站底层徽标</a></li><li><a href="https://akilar.gitee.io/posts/22257072/">时间轴美化 - 十二生肖</a></li><li><a href="https://akilar.gitee.io/posts/3d221bf2/">加载动画更改</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-23</p></p></div><div class="body"><ul><li>将“留言板”更改为“更新日志”</li></ul></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐播放器 - Music Player</title>
      <link href="music/index.html"/>
      <url>music/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>音乐播放列表收藏了我喜欢的并适合博客阅读的音乐，整体风格偏舒缓。想进一步了解我喜欢的音乐，推荐点击我的QQ音乐。</p><a class="btn-beautify button--animated outline green larger" href="https://y.qq.com/portal/profile.html#stat=y_new.top.user_pic"   title="QQ音乐"><i class="far fa-hand-point-right fa-fw"></i><span>QQ音乐</span></a><a class="btn-beautify button--animated outline red larger" href="https://music.163.com/#/user/home?id=1322854335"   title="网易云音乐"><i class="far fa-hand-point-right fa-fw"></i><span>网易云音乐</span></a></blockquote><hr><h2 id="音乐播放器使用说明"><a href="#音乐播放器使用说明" class="headerlink" title="音乐播放器使用说明"></a>音乐播放器使用说明</h2><ol><li>点击网页左下角右箭头➡展开音乐详情</li><li>点击播放键▶即可播放/暂停音乐</li><li>点击三杠型按钮可展开歌单</li></ol><blockquote><p>其余按钮功能等你来探索</p></blockquote>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>统计 - Statistics</title>
      <link href="statistics/index.html"/>
      <url>statistics/index.html</url>
      
        <content type="html"><![CDATA[<div class="js-pjax"><h2 id="时光机"><a href="#时光机" class="headerlink" title="时光机"></a>时光机</h2><div id="posts-chart"></div><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><div id="tags-chart" data-length="10"></div><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><div id="categories-chart"></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签 - Tags</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
